// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Transformer produces PropTypes declarations exclusively for commented components when requireGeneratorComment is enabled 1`] = `
"import * as _pt_ from \\"prop-types\\";
import * as React from 'react';
// ts-proptypes-transformer:generate
export class TestComponent extends React.Component {
}
TestComponent.propTypes = {
    'numberProp': _pt_.number.isRequired,
    'stringLiteralProp': _pt_.oneOf([
        \\"hi\\"
    ]).isRequired,
    'numberLiteralProp': _pt_.oneOf([
        1
    ]).isRequired,
    'boolLiteralProp': _pt_.oneOf([
        false
    ]).isRequired,
    'boolProp': _pt_.bool.isRequired,
    'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
    'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
    'optionalProp': _pt_.bool,
    'commentedProp': _pt_.string.isRequired,
    'union': _pt_.oneOf([
        \\"a\\",
        \\"b\\",
        \\"c\\"
    ]).isRequired,
    'unionAlias': _pt_.oneOfType([
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.shape({
            'lastName': _pt_.string.isRequired
        })
    ]).isRequired,
    'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
        _pt_.oneOf([
            true
        ]),
        _pt_.oneOf([
            \\"a\\"
        ]),
        _pt_.oneOf([
            \\"b\\"
        ]),
        _pt_.oneOf([
            \\"c\\"
        ]),
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.oneOf([
            5
        ]),
        _pt_.oneOf([
            \\"6\\"
        ]),
        _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        })
    ])).isRequired,
    'complexUnion': _pt_.oneOfType([
        _pt_.oneOf([
            true
        ]),
        _pt_.oneOf([
            \\"a\\"
        ]),
        _pt_.oneOf([
            \\"b\\"
        ]),
        _pt_.oneOf([
            \\"c\\"
        ]),
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.oneOf([
            5
        ]),
        _pt_.oneOf([
            \\"6\\"
        ]),
        _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        })
    ]).isRequired,
    'interfaceValue': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'intersecton': _pt_.shape({
        'firstName': _pt_.string.isRequired,
        'lastName': _pt_.string.isRequired
    }).isRequired,
    'intersectonAlias': _pt_.shape({
        'firstName': _pt_.string.isRequired,
        'lastName': _pt_.string.isRequired
    }).isRequired,
    'partialIntersectionAlias': _pt_.shape({
        'firstName': _pt_.string,
        'lastName': _pt_.string
    }).isRequired,
    'enum': _pt_.oneOf([
        0,
        1,
        2
    ]).isRequired,
    'optionalSelfReferencing': _pt_.shape({
        'numberProp': _pt_.number.isRequired,
        'stringLiteralProp': _pt_.oneOf([
            \\"hi\\"
        ]).isRequired,
        'numberLiteralProp': _pt_.oneOf([
            1
        ]).isRequired,
        'boolLiteralProp': _pt_.oneOf([
            false
        ]).isRequired,
        'boolProp': _pt_.bool.isRequired,
        'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
        'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
        'optionalProp': _pt_.bool,
        'commentedProp': _pt_.string.isRequired,
        'union': _pt_.oneOf([
            \\"a\\",
            \\"b\\",
            \\"c\\"
        ]).isRequired,
        'unionAlias': _pt_.oneOfType([
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.shape({
                'lastName': _pt_.string.isRequired
            })
        ]).isRequired,
        'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
            _pt_.oneOf([
                true
            ]),
            _pt_.oneOf([
                \\"a\\"
            ]),
            _pt_.oneOf([
                \\"b\\"
            ]),
            _pt_.oneOf([
                \\"c\\"
            ]),
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.oneOf([
                5
            ]),
            _pt_.oneOf([
                \\"6\\"
            ]),
            _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            })
        ])).isRequired,
        'complexUnion': _pt_.oneOfType([
            _pt_.oneOf([
                true
            ]),
            _pt_.oneOf([
                \\"a\\"
            ]),
            _pt_.oneOf([
                \\"b\\"
            ]),
            _pt_.oneOf([
                \\"c\\"
            ]),
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.oneOf([
                5
            ]),
            _pt_.oneOf([
                \\"6\\"
            ]),
            _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            })
        ]).isRequired,
        'interfaceValue': _pt_.shape({
            'firstName': _pt_.string.isRequired
        }).isRequired,
        'intersecton': _pt_.shape({
            'firstName': _pt_.string.isRequired,
            'lastName': _pt_.string.isRequired
        }).isRequired,
        'intersectonAlias': _pt_.shape({
            'firstName': _pt_.string.isRequired,
            'lastName': _pt_.string.isRequired
        }).isRequired,
        'partialIntersectionAlias': _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        }).isRequired,
        'enum': _pt_.oneOf([
            0,
            1,
            2
        ]).isRequired,
        'optionalSelfReferencing': _pt_.shape({
            'numberProp': _pt_.number.isRequired,
            'stringLiteralProp': _pt_.oneOf([
                \\"hi\\"
            ]).isRequired,
            'numberLiteralProp': _pt_.oneOf([
                1
            ]).isRequired,
            'boolLiteralProp': _pt_.oneOf([
                false
            ]).isRequired,
            'boolProp': _pt_.bool.isRequired,
            'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
            'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
            'optionalProp': _pt_.bool,
            'commentedProp': _pt_.string.isRequired,
            'union': _pt_.oneOf([
                \\"a\\",
                \\"b\\",
                \\"c\\"
            ]).isRequired,
            'unionAlias': _pt_.oneOfType([
                _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }),
                _pt_.shape({
                    'lastName': _pt_.string.isRequired
                })
            ]).isRequired,
            'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
                _pt_.oneOf([
                    true
                ]),
                _pt_.oneOf([
                    \\"a\\"
                ]),
                _pt_.oneOf([
                    \\"b\\"
                ]),
                _pt_.oneOf([
                    \\"c\\"
                ]),
                _pt_.shape({
                    'firstName': _pt_.any.isRequired
                }),
                _pt_.oneOf([
                    5
                ]),
                _pt_.oneOf([
                    \\"6\\"
                ]),
                _pt_.shape({
                    'firstName': _pt_.any,
                    'lastName': _pt_.any
                })
            ])).isRequired,
            'complexUnion': _pt_.oneOfType([
                _pt_.oneOf([
                    true
                ]),
                _pt_.oneOf([
                    \\"a\\"
                ]),
                _pt_.oneOf([
                    \\"b\\"
                ]),
                _pt_.oneOf([
                    \\"c\\"
                ]),
                _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }),
                _pt_.oneOf([
                    5
                ]),
                _pt_.oneOf([
                    \\"6\\"
                ]),
                _pt_.shape({
                    'firstName': _pt_.string,
                    'lastName': _pt_.string
                })
            ]).isRequired,
            'interfaceValue': _pt_.shape({
                'firstName': _pt_.string.isRequired
            }).isRequired,
            'intersecton': _pt_.shape({
                'firstName': _pt_.string.isRequired,
                'lastName': _pt_.string.isRequired
            }).isRequired,
            'intersectonAlias': _pt_.shape({
                'firstName': _pt_.string.isRequired,
                'lastName': _pt_.string.isRequired
            }).isRequired,
            'partialIntersectionAlias': _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            }).isRequired,
            'enum': _pt_.oneOf([
                0,
                1,
                2
            ]).isRequired,
            'optionalSelfReferencing': _pt_.shape({
                'numberProp': _pt_.number.isRequired,
                'stringLiteralProp': _pt_.oneOf([
                    \\"hi\\"
                ]).isRequired,
                'numberLiteralProp': _pt_.oneOf([
                    1
                ]).isRequired,
                'boolLiteralProp': _pt_.oneOf([
                    false
                ]).isRequired,
                'boolProp': _pt_.bool.isRequired,
                'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
                'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
                'optionalProp': _pt_.bool,
                'commentedProp': _pt_.string.isRequired,
                'union': _pt_.oneOf([
                    \\"a\\",
                    \\"b\\",
                    \\"c\\"
                ]).isRequired,
                'unionAlias': _pt_.oneOfType([
                    _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }),
                    _pt_.shape({
                        'lastName': _pt_.any.isRequired
                    })
                ]).isRequired,
                'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any
                ])).isRequired,
                'complexUnion': _pt_.oneOfType([
                    _pt_.oneOf([
                        true
                    ]),
                    _pt_.oneOf([
                        \\"a\\"
                    ]),
                    _pt_.oneOf([
                        \\"b\\"
                    ]),
                    _pt_.oneOf([
                        \\"c\\"
                    ]),
                    _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }),
                    _pt_.oneOf([
                        5
                    ]),
                    _pt_.oneOf([
                        \\"6\\"
                    ]),
                    _pt_.shape({
                        'firstName': _pt_.any,
                        'lastName': _pt_.any
                    })
                ]).isRequired,
                'interfaceValue': _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }).isRequired,
                'intersecton': _pt_.shape({
                    'firstName': _pt_.string.isRequired,
                    'lastName': _pt_.string.isRequired
                }).isRequired,
                'intersectonAlias': _pt_.shape({
                    'firstName': _pt_.string.isRequired,
                    'lastName': _pt_.string.isRequired
                }).isRequired,
                'partialIntersectionAlias': _pt_.shape({
                    'firstName': _pt_.string,
                    'lastName': _pt_.string
                }).isRequired,
                'enum': _pt_.oneOf([
                    0,
                    1,
                    2
                ]).isRequired,
                'optionalSelfReferencing': _pt_.shape({
                    'numberProp': _pt_.number.isRequired,
                    'stringLiteralProp': _pt_.oneOf([
                        \\"hi\\"
                    ]).isRequired,
                    'numberLiteralProp': _pt_.oneOf([
                        1
                    ]).isRequired,
                    'boolLiteralProp': _pt_.oneOf([
                        false
                    ]).isRequired,
                    'boolProp': _pt_.bool.isRequired,
                    'arrayProp': _pt_.arrayOf(_pt_.any).isRequired,
                    'genericArrayProp': _pt_.arrayOf(_pt_.any).isRequired,
                    'optionalProp': _pt_.bool,
                    'commentedProp': _pt_.string.isRequired,
                    'union': _pt_.oneOf([
                        \\"a\\",
                        \\"b\\",
                        \\"c\\"
                    ]).isRequired,
                    'unionAlias': _pt_.oneOfType([
                        _pt_.any,
                        _pt_.any
                    ]).isRequired,
                    'arrayOfUnion': _pt_.arrayOf(_pt_.any).isRequired,
                    'complexUnion': _pt_.oneOfType([
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any
                    ]).isRequired,
                    'interfaceValue': _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }).isRequired,
                    'intersecton': _pt_.shape({
                        'firstName': _pt_.any.isRequired,
                        'lastName': _pt_.any.isRequired
                    }).isRequired,
                    'intersectonAlias': _pt_.shape({
                        'firstName': _pt_.any.isRequired,
                        'lastName': _pt_.any.isRequired
                    }).isRequired,
                    'partialIntersectionAlias': _pt_.shape({
                        'firstName': _pt_.any,
                        'lastName': _pt_.any
                    }).isRequired,
                    'enum': _pt_.oneOf([
                        0,
                        1,
                        2
                    ]).isRequired,
                    'optionalSelfReferencing': _pt_.shape({
                        'numberProp': _pt_.any.isRequired,
                        'stringLiteralProp': _pt_.any.isRequired,
                        'numberLiteralProp': _pt_.any.isRequired,
                        'boolLiteralProp': _pt_.any.isRequired,
                        'boolProp': _pt_.any.isRequired,
                        'arrayProp': _pt_.any.isRequired,
                        'genericArrayProp': _pt_.any.isRequired,
                        'optionalProp': _pt_.any,
                        'commentedProp': _pt_.any.isRequired,
                        'union': _pt_.any.isRequired,
                        'unionAlias': _pt_.any.isRequired,
                        'arrayOfUnion': _pt_.any.isRequired,
                        'complexUnion': _pt_.any.isRequired,
                        'interfaceValue': _pt_.any.isRequired,
                        'intersecton': _pt_.any.isRequired,
                        'intersectonAlias': _pt_.any.isRequired,
                        'partialIntersectionAlias': _pt_.any.isRequired,
                        'enum': _pt_.any.isRequired,
                        'optionalSelfReferencing': _pt_.any,
                        'css': _pt_.any,
                        'dom': _pt_.any,
                        'callable': _pt_.any.isRequired,
                        'newable': _pt_.any.isRequired,
                        'typeOf': _pt_.any.isRequired,
                        'id': _pt_.any.isRequired
                    }),
                    'css': _pt_.shape({}),
                    'dom': _pt_.arrayOf(_pt_.any),
                    'callable': _pt_.func.isRequired,
                    'newable': _pt_.func.isRequired,
                    'typeOf': _pt_.func.isRequired,
                    'id': _pt_.number.isRequired
                }),
                'css': _pt_.shape({}),
                'dom': _pt_.arrayOf(_pt_.string),
                'callable': _pt_.func.isRequired,
                'newable': _pt_.func.isRequired,
                'typeOf': _pt_.func.isRequired,
                'id': _pt_.number.isRequired
            }),
            'css': _pt_.shape({}),
            'dom': _pt_.arrayOf(_pt_.string),
            'callable': _pt_.func.isRequired,
            'newable': _pt_.func.isRequired,
            'typeOf': _pt_.func.isRequired,
            'id': _pt_.number.isRequired
        }),
        'css': _pt_.shape({}),
        'dom': _pt_.arrayOf(_pt_.string),
        'callable': _pt_.func.isRequired,
        'newable': _pt_.func.isRequired,
        'typeOf': _pt_.func.isRequired,
        'id': _pt_.number.isRequired
    }),
    'css': _pt_.shape({}),
    'dom': _pt_.arrayOf(_pt_.string),
    'callable': _pt_.func.isRequired,
    'newable': _pt_.func.isRequired,
    'typeOf': _pt_.func.isRequired,
    'id': _pt_.number.isRequired
};
export class AlreadyHasAStaticPropTypes extends React.Component {
}
AlreadyHasAStaticPropTypes.propTypes = {};
export class NotAComponentClass {
}
/* ts-proptypes-transformer:generate */
export class GenericPropsTestComponent extends React.Component {
}
GenericPropsTestComponent.propTypes = {
    'propOfT': _pt_.any.isRequired,
    'propOfU': _pt_.any.isRequired,
    'propOfArrayOfT': _pt_.arrayOf(_pt_.any).isRequired,
    'propOfTAndU': _pt_.any.isRequired,
    'propOfArrayOfTAndU': _pt_.arrayOf(_pt_.any).isRequired
};
/** ts-proptypes-transformer:generate **/
export class GenericPropsTestComponent2 extends React.Component {
}
GenericPropsTestComponent2.propTypes = {
    'propOfT': _pt_.any.isRequired,
    'propOfU': _pt_.any.isRequired,
    'propOfArrayOfT': _pt_.arrayOf(_pt_.any).isRequired,
    'propOfTAndU': _pt_.shape({}).isRequired,
    'propOfArrayOfTAndU': _pt_.arrayOf(_pt_.shape({})).isRequired
};
// ts-proptypes-transformer:asdasdg
export class GenericPropsTestComponent3 extends React.Component {
}
// ts-proptypes-transformer:generate
export class GenericPropsTestComponent4 extends React.Component {
}
export class GenericPropsTestComponent5 extends React.Component {
}
export class GenericPropsTestComponent6 extends GenericPropsTestComponent5 {
}
// BUG: U is not being combined here:
export class GenericPropsTestComponent7 extends GenericPropsTestComponent6 {
}
export class AnyPropsComponent extends React.Component {
}
export const StatelessFunctionalTestComponent = (p) => {
    return <AnyPropsComponent {...p}/>;
};
const NonExportedStatelessFunctionalTestComponent = (p) => {
    return <AnyPropsComponent {...p}/>;
};
export const InferrableStatelessFunctionalTestComponent = (p) => {
    return <StatelessFunctionalTestComponent {...p}/>;
};
export function DeclaredFunctionTestComponent(p) {
    return <StatelessFunctionalTestComponent {...p}/>;
}
"
`;

exports[`Transformer transforms TypeScript interfaces to PropTypes declarations on CommonJS emitted code 1`] = `
"\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
const _pt_ = require(\\"prop-types\\");
const React = require(\\"react\\");
// ts-proptypes-transformer:generate
class TestComponent extends React.Component {
}
TestComponent.propTypes = {
    'numberProp': _pt_.number.isRequired,
    'stringLiteralProp': _pt_.oneOf([
        \\"hi\\"
    ]).isRequired,
    'numberLiteralProp': _pt_.oneOf([
        1
    ]).isRequired,
    'boolLiteralProp': _pt_.oneOf([
        false
    ]).isRequired,
    'boolProp': _pt_.bool.isRequired,
    'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
    'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
    'optionalProp': _pt_.bool,
    'commentedProp': _pt_.string.isRequired,
    'union': _pt_.oneOf([
        \\"a\\",
        \\"b\\",
        \\"c\\"
    ]).isRequired,
    'unionAlias': _pt_.oneOfType([
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.shape({
            'lastName': _pt_.string.isRequired
        })
    ]).isRequired,
    'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
        _pt_.oneOf([
            true
        ]),
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.oneOf([
            \\"a\\"
        ]),
        _pt_.oneOf([
            \\"b\\"
        ]),
        _pt_.oneOf([
            \\"c\\"
        ]),
        _pt_.oneOf([
            5
        ]),
        _pt_.oneOf([
            \\"6\\"
        ]),
        _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        })
    ])).isRequired,
    'complexUnion': _pt_.oneOfType([
        _pt_.oneOf([
            true
        ]),
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.oneOf([
            \\"a\\"
        ]),
        _pt_.oneOf([
            \\"b\\"
        ]),
        _pt_.oneOf([
            \\"c\\"
        ]),
        _pt_.oneOf([
            5
        ]),
        _pt_.oneOf([
            \\"6\\"
        ]),
        _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        })
    ]).isRequired,
    'interfaceValue': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'intersecton': _pt_.shape({
        'firstName': _pt_.string.isRequired,
        'lastName': _pt_.string.isRequired
    }).isRequired,
    'intersectonAlias': _pt_.shape({
        'firstName': _pt_.string.isRequired,
        'lastName': _pt_.string.isRequired
    }).isRequired,
    'partialIntersectionAlias': _pt_.shape({
        'firstName': _pt_.string,
        'lastName': _pt_.string
    }).isRequired,
    'enum': _pt_.oneOf([
        0,
        1,
        2
    ]).isRequired,
    'optionalSelfReferencing': _pt_.shape({
        'numberProp': _pt_.number.isRequired,
        'stringLiteralProp': _pt_.oneOf([
            \\"hi\\"
        ]).isRequired,
        'numberLiteralProp': _pt_.oneOf([
            1
        ]).isRequired,
        'boolLiteralProp': _pt_.oneOf([
            false
        ]).isRequired,
        'boolProp': _pt_.bool.isRequired,
        'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
        'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
        'optionalProp': _pt_.bool,
        'commentedProp': _pt_.string.isRequired,
        'union': _pt_.oneOf([
            \\"a\\",
            \\"b\\",
            \\"c\\"
        ]).isRequired,
        'unionAlias': _pt_.oneOfType([
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.shape({
                'lastName': _pt_.string.isRequired
            })
        ]).isRequired,
        'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
            _pt_.oneOf([
                true
            ]),
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.oneOf([
                \\"a\\"
            ]),
            _pt_.oneOf([
                \\"b\\"
            ]),
            _pt_.oneOf([
                \\"c\\"
            ]),
            _pt_.oneOf([
                5
            ]),
            _pt_.oneOf([
                \\"6\\"
            ]),
            _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            })
        ])).isRequired,
        'complexUnion': _pt_.oneOfType([
            _pt_.oneOf([
                true
            ]),
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.oneOf([
                \\"a\\"
            ]),
            _pt_.oneOf([
                \\"b\\"
            ]),
            _pt_.oneOf([
                \\"c\\"
            ]),
            _pt_.oneOf([
                5
            ]),
            _pt_.oneOf([
                \\"6\\"
            ]),
            _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            })
        ]).isRequired,
        'interfaceValue': _pt_.shape({
            'firstName': _pt_.string.isRequired
        }).isRequired,
        'intersecton': _pt_.shape({
            'firstName': _pt_.string.isRequired,
            'lastName': _pt_.string.isRequired
        }).isRequired,
        'intersectonAlias': _pt_.shape({
            'firstName': _pt_.string.isRequired,
            'lastName': _pt_.string.isRequired
        }).isRequired,
        'partialIntersectionAlias': _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        }).isRequired,
        'enum': _pt_.oneOf([
            0,
            1,
            2
        ]).isRequired,
        'optionalSelfReferencing': _pt_.shape({
            'numberProp': _pt_.number.isRequired,
            'stringLiteralProp': _pt_.oneOf([
                \\"hi\\"
            ]).isRequired,
            'numberLiteralProp': _pt_.oneOf([
                1
            ]).isRequired,
            'boolLiteralProp': _pt_.oneOf([
                false
            ]).isRequired,
            'boolProp': _pt_.bool.isRequired,
            'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
            'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
            'optionalProp': _pt_.bool,
            'commentedProp': _pt_.string.isRequired,
            'union': _pt_.oneOf([
                \\"a\\",
                \\"b\\",
                \\"c\\"
            ]).isRequired,
            'unionAlias': _pt_.oneOfType([
                _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }),
                _pt_.shape({
                    'lastName': _pt_.string.isRequired
                })
            ]).isRequired,
            'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
                _pt_.oneOf([
                    true
                ]),
                _pt_.shape({
                    'firstName': _pt_.any.isRequired
                }),
                _pt_.oneOf([
                    \\"a\\"
                ]),
                _pt_.oneOf([
                    \\"b\\"
                ]),
                _pt_.oneOf([
                    \\"c\\"
                ]),
                _pt_.oneOf([
                    5
                ]),
                _pt_.oneOf([
                    \\"6\\"
                ]),
                _pt_.shape({
                    'firstName': _pt_.any,
                    'lastName': _pt_.any
                })
            ])).isRequired,
            'complexUnion': _pt_.oneOfType([
                _pt_.oneOf([
                    true
                ]),
                _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }),
                _pt_.oneOf([
                    \\"a\\"
                ]),
                _pt_.oneOf([
                    \\"b\\"
                ]),
                _pt_.oneOf([
                    \\"c\\"
                ]),
                _pt_.oneOf([
                    5
                ]),
                _pt_.oneOf([
                    \\"6\\"
                ]),
                _pt_.shape({
                    'firstName': _pt_.string,
                    'lastName': _pt_.string
                })
            ]).isRequired,
            'interfaceValue': _pt_.shape({
                'firstName': _pt_.string.isRequired
            }).isRequired,
            'intersecton': _pt_.shape({
                'firstName': _pt_.string.isRequired,
                'lastName': _pt_.string.isRequired
            }).isRequired,
            'intersectonAlias': _pt_.shape({
                'firstName': _pt_.string.isRequired,
                'lastName': _pt_.string.isRequired
            }).isRequired,
            'partialIntersectionAlias': _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            }).isRequired,
            'enum': _pt_.oneOf([
                0,
                1,
                2
            ]).isRequired,
            'optionalSelfReferencing': _pt_.shape({
                'numberProp': _pt_.number.isRequired,
                'stringLiteralProp': _pt_.oneOf([
                    \\"hi\\"
                ]).isRequired,
                'numberLiteralProp': _pt_.oneOf([
                    1
                ]).isRequired,
                'boolLiteralProp': _pt_.oneOf([
                    false
                ]).isRequired,
                'boolProp': _pt_.bool.isRequired,
                'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
                'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
                'optionalProp': _pt_.bool,
                'commentedProp': _pt_.string.isRequired,
                'union': _pt_.oneOf([
                    \\"a\\",
                    \\"b\\",
                    \\"c\\"
                ]).isRequired,
                'unionAlias': _pt_.oneOfType([
                    _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }),
                    _pt_.shape({
                        'lastName': _pt_.any.isRequired
                    })
                ]).isRequired,
                'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any
                ])).isRequired,
                'complexUnion': _pt_.oneOfType([
                    _pt_.oneOf([
                        true
                    ]),
                    _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }),
                    _pt_.oneOf([
                        \\"a\\"
                    ]),
                    _pt_.oneOf([
                        \\"b\\"
                    ]),
                    _pt_.oneOf([
                        \\"c\\"
                    ]),
                    _pt_.oneOf([
                        5
                    ]),
                    _pt_.oneOf([
                        \\"6\\"
                    ]),
                    _pt_.shape({
                        'firstName': _pt_.any,
                        'lastName': _pt_.any
                    })
                ]).isRequired,
                'interfaceValue': _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }).isRequired,
                'intersecton': _pt_.shape({
                    'firstName': _pt_.string.isRequired,
                    'lastName': _pt_.string.isRequired
                }).isRequired,
                'intersectonAlias': _pt_.shape({
                    'firstName': _pt_.string.isRequired,
                    'lastName': _pt_.string.isRequired
                }).isRequired,
                'partialIntersectionAlias': _pt_.shape({
                    'firstName': _pt_.string,
                    'lastName': _pt_.string
                }).isRequired,
                'enum': _pt_.oneOf([
                    0,
                    1,
                    2
                ]).isRequired,
                'optionalSelfReferencing': _pt_.shape({
                    'numberProp': _pt_.number.isRequired,
                    'stringLiteralProp': _pt_.oneOf([
                        \\"hi\\"
                    ]).isRequired,
                    'numberLiteralProp': _pt_.oneOf([
                        1
                    ]).isRequired,
                    'boolLiteralProp': _pt_.oneOf([
                        false
                    ]).isRequired,
                    'boolProp': _pt_.bool.isRequired,
                    'arrayProp': _pt_.arrayOf(_pt_.any).isRequired,
                    'genericArrayProp': _pt_.arrayOf(_pt_.any).isRequired,
                    'optionalProp': _pt_.bool,
                    'commentedProp': _pt_.string.isRequired,
                    'union': _pt_.oneOf([
                        \\"a\\",
                        \\"b\\",
                        \\"c\\"
                    ]).isRequired,
                    'unionAlias': _pt_.oneOfType([
                        _pt_.any,
                        _pt_.any
                    ]).isRequired,
                    'arrayOfUnion': _pt_.arrayOf(_pt_.any).isRequired,
                    'complexUnion': _pt_.oneOfType([
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any
                    ]).isRequired,
                    'interfaceValue': _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }).isRequired,
                    'intersecton': _pt_.shape({
                        'firstName': _pt_.any.isRequired,
                        'lastName': _pt_.any.isRequired
                    }).isRequired,
                    'intersectonAlias': _pt_.shape({
                        'firstName': _pt_.any.isRequired,
                        'lastName': _pt_.any.isRequired
                    }).isRequired,
                    'partialIntersectionAlias': _pt_.shape({
                        'firstName': _pt_.any,
                        'lastName': _pt_.any
                    }).isRequired,
                    'enum': _pt_.oneOf([
                        0,
                        1,
                        2
                    ]).isRequired,
                    'optionalSelfReferencing': _pt_.shape({
                        'numberProp': _pt_.any.isRequired,
                        'stringLiteralProp': _pt_.any.isRequired,
                        'numberLiteralProp': _pt_.any.isRequired,
                        'boolLiteralProp': _pt_.any.isRequired,
                        'boolProp': _pt_.any.isRequired,
                        'arrayProp': _pt_.any.isRequired,
                        'genericArrayProp': _pt_.any.isRequired,
                        'optionalProp': _pt_.any,
                        'commentedProp': _pt_.any.isRequired,
                        'union': _pt_.any.isRequired,
                        'unionAlias': _pt_.any.isRequired,
                        'arrayOfUnion': _pt_.any.isRequired,
                        'complexUnion': _pt_.any.isRequired,
                        'interfaceValue': _pt_.any.isRequired,
                        'intersecton': _pt_.any.isRequired,
                        'intersectonAlias': _pt_.any.isRequired,
                        'partialIntersectionAlias': _pt_.any.isRequired,
                        'enum': _pt_.any.isRequired,
                        'optionalSelfReferencing': _pt_.any,
                        'css': _pt_.any,
                        'dom': _pt_.any,
                        'callable': _pt_.any.isRequired,
                        'newable': _pt_.any.isRequired,
                        'typeOf': _pt_.any.isRequired,
                        'id': _pt_.any.isRequired
                    }),
                    'css': _pt_.shape({}),
                    'dom': _pt_.arrayOf(_pt_.any),
                    'callable': _pt_.func.isRequired,
                    'newable': _pt_.func.isRequired,
                    'typeOf': _pt_.func.isRequired,
                    'id': _pt_.number.isRequired
                }),
                'css': _pt_.shape({}),
                'dom': _pt_.arrayOf(_pt_.string),
                'callable': _pt_.func.isRequired,
                'newable': _pt_.func.isRequired,
                'typeOf': _pt_.func.isRequired,
                'id': _pt_.number.isRequired
            }),
            'css': _pt_.shape({}),
            'dom': _pt_.arrayOf(_pt_.string),
            'callable': _pt_.func.isRequired,
            'newable': _pt_.func.isRequired,
            'typeOf': _pt_.func.isRequired,
            'id': _pt_.number.isRequired
        }),
        'css': _pt_.shape({}),
        'dom': _pt_.arrayOf(_pt_.string),
        'callable': _pt_.func.isRequired,
        'newable': _pt_.func.isRequired,
        'typeOf': _pt_.func.isRequired,
        'id': _pt_.number.isRequired
    }),
    'css': _pt_.shape({}),
    'dom': _pt_.arrayOf(_pt_.string),
    'callable': _pt_.func.isRequired,
    'newable': _pt_.func.isRequired,
    'typeOf': _pt_.func.isRequired,
    'id': _pt_.number.isRequired
};
exports.TestComponent = TestComponent;
class AlreadyHasAStaticPropTypes extends React.Component {
}
AlreadyHasAStaticPropTypes.propTypes = {};
exports.AlreadyHasAStaticPropTypes = AlreadyHasAStaticPropTypes;
class NotAComponentClass {
}
exports.NotAComponentClass = NotAComponentClass;
/* ts-proptypes-transformer:generate */
class GenericPropsTestComponent extends React.Component {
}
GenericPropsTestComponent.propTypes = {
    'propOfT': _pt_.any.isRequired,
    'propOfU': _pt_.any.isRequired,
    'propOfArrayOfT': _pt_.arrayOf(_pt_.any).isRequired,
    'propOfTAndU': _pt_.any.isRequired,
    'propOfArrayOfTAndU': _pt_.arrayOf(_pt_.any).isRequired
};
exports.GenericPropsTestComponent = GenericPropsTestComponent;
/** ts-proptypes-transformer:generate **/
class GenericPropsTestComponent2 extends React.Component {
}
GenericPropsTestComponent2.propTypes = {
    'propOfT': _pt_.any.isRequired,
    'propOfU': _pt_.any.isRequired,
    'propOfArrayOfT': _pt_.arrayOf(_pt_.any).isRequired,
    'propOfTAndU': _pt_.shape({}).isRequired,
    'propOfArrayOfTAndU': _pt_.arrayOf(_pt_.shape({})).isRequired
};
exports.GenericPropsTestComponent2 = GenericPropsTestComponent2;
// ts-proptypes-transformer:asdasdg
class GenericPropsTestComponent3 extends React.Component {
}
GenericPropsTestComponent3.propTypes = {
    'propOfT': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'propOfU': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'propOfArrayOfT': _pt_.arrayOf(_pt_.shape({
        'firstName': _pt_.string.isRequired
    })).isRequired,
    'propOfTAndU': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'propOfArrayOfTAndU': _pt_.arrayOf(_pt_.shape({
        'firstName': _pt_.string.isRequired
    })).isRequired
};
exports.GenericPropsTestComponent3 = GenericPropsTestComponent3;
// ts-proptypes-transformer:generate
class GenericPropsTestComponent4 extends React.Component {
}
GenericPropsTestComponent4.propTypes = {
    'propOfT': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'propOfU': _pt_.shape({
        'lastName': _pt_.string.isRequired
    }).isRequired,
    'propOfArrayOfT': _pt_.arrayOf(_pt_.shape({
        'firstName': _pt_.string.isRequired
    })).isRequired,
    'propOfTAndU': _pt_.shape({
        'firstName': _pt_.string.isRequired,
        'lastName': _pt_.string.isRequired
    }).isRequired,
    'propOfArrayOfTAndU': _pt_.arrayOf(_pt_.shape({
        'firstName': _pt_.string.isRequired,
        'lastName': _pt_.string.isRequired
    })).isRequired
};
exports.GenericPropsTestComponent4 = GenericPropsTestComponent4;
class GenericPropsTestComponent5 extends React.Component {
}
GenericPropsTestComponent5.propTypes = {
    'propOfT': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'propOfU': _pt_.any.isRequired,
    'propOfArrayOfT': _pt_.arrayOf(_pt_.shape({
        'firstName': _pt_.string.isRequired
    })).isRequired,
    'propOfTAndU': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'propOfArrayOfTAndU': _pt_.arrayOf(_pt_.shape({
        'firstName': _pt_.string.isRequired
    })).isRequired
};
exports.GenericPropsTestComponent5 = GenericPropsTestComponent5;
class GenericPropsTestComponent6 extends GenericPropsTestComponent5 {
}
GenericPropsTestComponent6.propTypes = {
    'propOfT': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'propOfU': _pt_.any.isRequired,
    'propOfArrayOfT': _pt_.arrayOf(_pt_.shape({
        'firstName': _pt_.string.isRequired
    })).isRequired,
    'propOfTAndU': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'propOfArrayOfTAndU': _pt_.arrayOf(_pt_.shape({
        'firstName': _pt_.string.isRequired
    })).isRequired
};
exports.GenericPropsTestComponent6 = GenericPropsTestComponent6;
// BUG: U is not being combined here:
class GenericPropsTestComponent7 extends GenericPropsTestComponent6 {
}
GenericPropsTestComponent7.propTypes = {
    'propOfT': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'propOfU': _pt_.any.isRequired,
    'propOfArrayOfT': _pt_.arrayOf(_pt_.shape({
        'firstName': _pt_.string.isRequired
    })).isRequired,
    'propOfTAndU': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'propOfArrayOfTAndU': _pt_.arrayOf(_pt_.shape({
        'firstName': _pt_.string.isRequired
    })).isRequired
};
exports.GenericPropsTestComponent7 = GenericPropsTestComponent7;
class AnyPropsComponent extends React.Component {
}
AnyPropsComponent.propTypes = {};
exports.AnyPropsComponent = AnyPropsComponent;
exports.StatelessFunctionalTestComponent = (p) => {
    return React.createElement(AnyPropsComponent, Object.assign({}, p));
};
exports.StatelessFunctionalTestComponent.propTypes = {
    'numberProp': _pt_.number.isRequired,
    'stringLiteralProp': _pt_.oneOf([
        \\"hi\\"
    ]).isRequired,
    'numberLiteralProp': _pt_.oneOf([
        1
    ]).isRequired,
    'boolLiteralProp': _pt_.oneOf([
        false
    ]).isRequired,
    'boolProp': _pt_.bool.isRequired,
    'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
    'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
    'optionalProp': _pt_.bool,
    'commentedProp': _pt_.string.isRequired,
    'union': _pt_.oneOf([
        \\"a\\",
        \\"b\\",
        \\"c\\"
    ]).isRequired,
    'unionAlias': _pt_.oneOfType([
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.shape({
            'lastName': _pt_.string.isRequired
        })
    ]).isRequired,
    'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
        _pt_.oneOf([
            true
        ]),
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.oneOf([
            \\"a\\"
        ]),
        _pt_.oneOf([
            \\"b\\"
        ]),
        _pt_.oneOf([
            \\"c\\"
        ]),
        _pt_.oneOf([
            5
        ]),
        _pt_.oneOf([
            \\"6\\"
        ]),
        _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        })
    ])).isRequired,
    'complexUnion': _pt_.oneOfType([
        _pt_.oneOf([
            true
        ]),
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.oneOf([
            \\"a\\"
        ]),
        _pt_.oneOf([
            \\"b\\"
        ]),
        _pt_.oneOf([
            \\"c\\"
        ]),
        _pt_.oneOf([
            5
        ]),
        _pt_.oneOf([
            \\"6\\"
        ]),
        _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        })
    ]).isRequired,
    'interfaceValue': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'intersecton': _pt_.shape({
        'firstName': _pt_.string.isRequired,
        'lastName': _pt_.string.isRequired
    }).isRequired,
    'intersectonAlias': _pt_.shape({
        'firstName': _pt_.string.isRequired,
        'lastName': _pt_.string.isRequired
    }).isRequired,
    'partialIntersectionAlias': _pt_.shape({
        'firstName': _pt_.string,
        'lastName': _pt_.string
    }).isRequired,
    'enum': _pt_.oneOf([
        0,
        1,
        2
    ]).isRequired,
    'optionalSelfReferencing': _pt_.shape({
        'numberProp': _pt_.number.isRequired,
        'stringLiteralProp': _pt_.oneOf([
            \\"hi\\"
        ]).isRequired,
        'numberLiteralProp': _pt_.oneOf([
            1
        ]).isRequired,
        'boolLiteralProp': _pt_.oneOf([
            false
        ]).isRequired,
        'boolProp': _pt_.bool.isRequired,
        'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
        'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
        'optionalProp': _pt_.bool,
        'commentedProp': _pt_.string.isRequired,
        'union': _pt_.oneOf([
            \\"a\\",
            \\"b\\",
            \\"c\\"
        ]).isRequired,
        'unionAlias': _pt_.oneOfType([
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.shape({
                'lastName': _pt_.string.isRequired
            })
        ]).isRequired,
        'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
            _pt_.oneOf([
                true
            ]),
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.oneOf([
                \\"a\\"
            ]),
            _pt_.oneOf([
                \\"b\\"
            ]),
            _pt_.oneOf([
                \\"c\\"
            ]),
            _pt_.oneOf([
                5
            ]),
            _pt_.oneOf([
                \\"6\\"
            ]),
            _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            })
        ])).isRequired,
        'complexUnion': _pt_.oneOfType([
            _pt_.oneOf([
                true
            ]),
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.oneOf([
                \\"a\\"
            ]),
            _pt_.oneOf([
                \\"b\\"
            ]),
            _pt_.oneOf([
                \\"c\\"
            ]),
            _pt_.oneOf([
                5
            ]),
            _pt_.oneOf([
                \\"6\\"
            ]),
            _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            })
        ]).isRequired,
        'interfaceValue': _pt_.shape({
            'firstName': _pt_.string.isRequired
        }).isRequired,
        'intersecton': _pt_.shape({
            'firstName': _pt_.string.isRequired,
            'lastName': _pt_.string.isRequired
        }).isRequired,
        'intersectonAlias': _pt_.shape({
            'firstName': _pt_.string.isRequired,
            'lastName': _pt_.string.isRequired
        }).isRequired,
        'partialIntersectionAlias': _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        }).isRequired,
        'enum': _pt_.oneOf([
            0,
            1,
            2
        ]).isRequired,
        'optionalSelfReferencing': _pt_.shape({
            'numberProp': _pt_.number.isRequired,
            'stringLiteralProp': _pt_.oneOf([
                \\"hi\\"
            ]).isRequired,
            'numberLiteralProp': _pt_.oneOf([
                1
            ]).isRequired,
            'boolLiteralProp': _pt_.oneOf([
                false
            ]).isRequired,
            'boolProp': _pt_.bool.isRequired,
            'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
            'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
            'optionalProp': _pt_.bool,
            'commentedProp': _pt_.string.isRequired,
            'union': _pt_.oneOf([
                \\"a\\",
                \\"b\\",
                \\"c\\"
            ]).isRequired,
            'unionAlias': _pt_.oneOfType([
                _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }),
                _pt_.shape({
                    'lastName': _pt_.string.isRequired
                })
            ]).isRequired,
            'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
                _pt_.oneOf([
                    true
                ]),
                _pt_.shape({
                    'firstName': _pt_.any.isRequired
                }),
                _pt_.oneOf([
                    \\"a\\"
                ]),
                _pt_.oneOf([
                    \\"b\\"
                ]),
                _pt_.oneOf([
                    \\"c\\"
                ]),
                _pt_.oneOf([
                    5
                ]),
                _pt_.oneOf([
                    \\"6\\"
                ]),
                _pt_.shape({
                    'firstName': _pt_.any,
                    'lastName': _pt_.any
                })
            ])).isRequired,
            'complexUnion': _pt_.oneOfType([
                _pt_.oneOf([
                    true
                ]),
                _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }),
                _pt_.oneOf([
                    \\"a\\"
                ]),
                _pt_.oneOf([
                    \\"b\\"
                ]),
                _pt_.oneOf([
                    \\"c\\"
                ]),
                _pt_.oneOf([
                    5
                ]),
                _pt_.oneOf([
                    \\"6\\"
                ]),
                _pt_.shape({
                    'firstName': _pt_.string,
                    'lastName': _pt_.string
                })
            ]).isRequired,
            'interfaceValue': _pt_.shape({
                'firstName': _pt_.string.isRequired
            }).isRequired,
            'intersecton': _pt_.shape({
                'firstName': _pt_.string.isRequired,
                'lastName': _pt_.string.isRequired
            }).isRequired,
            'intersectonAlias': _pt_.shape({
                'firstName': _pt_.string.isRequired,
                'lastName': _pt_.string.isRequired
            }).isRequired,
            'partialIntersectionAlias': _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            }).isRequired,
            'enum': _pt_.oneOf([
                0,
                1,
                2
            ]).isRequired,
            'optionalSelfReferencing': _pt_.shape({
                'numberProp': _pt_.number.isRequired,
                'stringLiteralProp': _pt_.oneOf([
                    \\"hi\\"
                ]).isRequired,
                'numberLiteralProp': _pt_.oneOf([
                    1
                ]).isRequired,
                'boolLiteralProp': _pt_.oneOf([
                    false
                ]).isRequired,
                'boolProp': _pt_.bool.isRequired,
                'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
                'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
                'optionalProp': _pt_.bool,
                'commentedProp': _pt_.string.isRequired,
                'union': _pt_.oneOf([
                    \\"a\\",
                    \\"b\\",
                    \\"c\\"
                ]).isRequired,
                'unionAlias': _pt_.oneOfType([
                    _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }),
                    _pt_.shape({
                        'lastName': _pt_.any.isRequired
                    })
                ]).isRequired,
                'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any
                ])).isRequired,
                'complexUnion': _pt_.oneOfType([
                    _pt_.oneOf([
                        true
                    ]),
                    _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }),
                    _pt_.oneOf([
                        \\"a\\"
                    ]),
                    _pt_.oneOf([
                        \\"b\\"
                    ]),
                    _pt_.oneOf([
                        \\"c\\"
                    ]),
                    _pt_.oneOf([
                        5
                    ]),
                    _pt_.oneOf([
                        \\"6\\"
                    ]),
                    _pt_.shape({
                        'firstName': _pt_.any,
                        'lastName': _pt_.any
                    })
                ]).isRequired,
                'interfaceValue': _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }).isRequired,
                'intersecton': _pt_.shape({
                    'firstName': _pt_.string.isRequired,
                    'lastName': _pt_.string.isRequired
                }).isRequired,
                'intersectonAlias': _pt_.shape({
                    'firstName': _pt_.string.isRequired,
                    'lastName': _pt_.string.isRequired
                }).isRequired,
                'partialIntersectionAlias': _pt_.shape({
                    'firstName': _pt_.string,
                    'lastName': _pt_.string
                }).isRequired,
                'enum': _pt_.oneOf([
                    0,
                    1,
                    2
                ]).isRequired,
                'optionalSelfReferencing': _pt_.shape({
                    'numberProp': _pt_.number.isRequired,
                    'stringLiteralProp': _pt_.oneOf([
                        \\"hi\\"
                    ]).isRequired,
                    'numberLiteralProp': _pt_.oneOf([
                        1
                    ]).isRequired,
                    'boolLiteralProp': _pt_.oneOf([
                        false
                    ]).isRequired,
                    'boolProp': _pt_.bool.isRequired,
                    'arrayProp': _pt_.arrayOf(_pt_.any).isRequired,
                    'genericArrayProp': _pt_.arrayOf(_pt_.any).isRequired,
                    'optionalProp': _pt_.bool,
                    'commentedProp': _pt_.string.isRequired,
                    'union': _pt_.oneOf([
                        \\"a\\",
                        \\"b\\",
                        \\"c\\"
                    ]).isRequired,
                    'unionAlias': _pt_.oneOfType([
                        _pt_.any,
                        _pt_.any
                    ]).isRequired,
                    'arrayOfUnion': _pt_.arrayOf(_pt_.any).isRequired,
                    'complexUnion': _pt_.oneOfType([
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any
                    ]).isRequired,
                    'interfaceValue': _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }).isRequired,
                    'intersecton': _pt_.shape({
                        'firstName': _pt_.any.isRequired,
                        'lastName': _pt_.any.isRequired
                    }).isRequired,
                    'intersectonAlias': _pt_.shape({
                        'firstName': _pt_.any.isRequired,
                        'lastName': _pt_.any.isRequired
                    }).isRequired,
                    'partialIntersectionAlias': _pt_.shape({
                        'firstName': _pt_.any,
                        'lastName': _pt_.any
                    }).isRequired,
                    'enum': _pt_.oneOf([
                        0,
                        1,
                        2
                    ]).isRequired,
                    'optionalSelfReferencing': _pt_.shape({
                        'numberProp': _pt_.any.isRequired,
                        'stringLiteralProp': _pt_.any.isRequired,
                        'numberLiteralProp': _pt_.any.isRequired,
                        'boolLiteralProp': _pt_.any.isRequired,
                        'boolProp': _pt_.any.isRequired,
                        'arrayProp': _pt_.any.isRequired,
                        'genericArrayProp': _pt_.any.isRequired,
                        'optionalProp': _pt_.any,
                        'commentedProp': _pt_.any.isRequired,
                        'union': _pt_.any.isRequired,
                        'unionAlias': _pt_.any.isRequired,
                        'arrayOfUnion': _pt_.any.isRequired,
                        'complexUnion': _pt_.any.isRequired,
                        'interfaceValue': _pt_.any.isRequired,
                        'intersecton': _pt_.any.isRequired,
                        'intersectonAlias': _pt_.any.isRequired,
                        'partialIntersectionAlias': _pt_.any.isRequired,
                        'enum': _pt_.any.isRequired,
                        'optionalSelfReferencing': _pt_.any,
                        'css': _pt_.any,
                        'dom': _pt_.any,
                        'callable': _pt_.any.isRequired,
                        'newable': _pt_.any.isRequired,
                        'typeOf': _pt_.any.isRequired,
                        'id': _pt_.any.isRequired
                    }),
                    'css': _pt_.shape({}),
                    'dom': _pt_.arrayOf(_pt_.any),
                    'callable': _pt_.func.isRequired,
                    'newable': _pt_.func.isRequired,
                    'typeOf': _pt_.func.isRequired,
                    'id': _pt_.number.isRequired
                }),
                'css': _pt_.shape({}),
                'dom': _pt_.arrayOf(_pt_.string),
                'callable': _pt_.func.isRequired,
                'newable': _pt_.func.isRequired,
                'typeOf': _pt_.func.isRequired,
                'id': _pt_.number.isRequired
            }),
            'css': _pt_.shape({}),
            'dom': _pt_.arrayOf(_pt_.string),
            'callable': _pt_.func.isRequired,
            'newable': _pt_.func.isRequired,
            'typeOf': _pt_.func.isRequired,
            'id': _pt_.number.isRequired
        }),
        'css': _pt_.shape({}),
        'dom': _pt_.arrayOf(_pt_.string),
        'callable': _pt_.func.isRequired,
        'newable': _pt_.func.isRequired,
        'typeOf': _pt_.func.isRequired,
        'id': _pt_.number.isRequired
    }),
    'css': _pt_.shape({}),
    'dom': _pt_.arrayOf(_pt_.string),
    'callable': _pt_.func.isRequired,
    'newable': _pt_.func.isRequired,
    'typeOf': _pt_.func.isRequired,
    'id': _pt_.number.isRequired
};
const NonExportedStatelessFunctionalTestComponent = (p) => {
    return React.createElement(AnyPropsComponent, Object.assign({}, p));
};
NonExportedStatelessFunctionalTestComponent.propTypes = {
    'numberProp': _pt_.number.isRequired,
    'stringLiteralProp': _pt_.oneOf([
        \\"hi\\"
    ]).isRequired,
    'numberLiteralProp': _pt_.oneOf([
        1
    ]).isRequired,
    'boolLiteralProp': _pt_.oneOf([
        false
    ]).isRequired,
    'boolProp': _pt_.bool.isRequired,
    'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
    'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
    'optionalProp': _pt_.bool,
    'commentedProp': _pt_.string.isRequired,
    'union': _pt_.oneOf([
        \\"a\\",
        \\"b\\",
        \\"c\\"
    ]).isRequired,
    'unionAlias': _pt_.oneOfType([
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.shape({
            'lastName': _pt_.string.isRequired
        })
    ]).isRequired,
    'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
        _pt_.oneOf([
            true
        ]),
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.oneOf([
            \\"a\\"
        ]),
        _pt_.oneOf([
            \\"b\\"
        ]),
        _pt_.oneOf([
            \\"c\\"
        ]),
        _pt_.oneOf([
            5
        ]),
        _pt_.oneOf([
            \\"6\\"
        ]),
        _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        })
    ])).isRequired,
    'complexUnion': _pt_.oneOfType([
        _pt_.oneOf([
            true
        ]),
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.oneOf([
            \\"a\\"
        ]),
        _pt_.oneOf([
            \\"b\\"
        ]),
        _pt_.oneOf([
            \\"c\\"
        ]),
        _pt_.oneOf([
            5
        ]),
        _pt_.oneOf([
            \\"6\\"
        ]),
        _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        })
    ]).isRequired,
    'interfaceValue': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'intersecton': _pt_.shape({
        'firstName': _pt_.string.isRequired,
        'lastName': _pt_.string.isRequired
    }).isRequired,
    'intersectonAlias': _pt_.shape({
        'firstName': _pt_.string.isRequired,
        'lastName': _pt_.string.isRequired
    }).isRequired,
    'partialIntersectionAlias': _pt_.shape({
        'firstName': _pt_.string,
        'lastName': _pt_.string
    }).isRequired,
    'enum': _pt_.oneOf([
        0,
        1,
        2
    ]).isRequired,
    'optionalSelfReferencing': _pt_.shape({
        'numberProp': _pt_.number.isRequired,
        'stringLiteralProp': _pt_.oneOf([
            \\"hi\\"
        ]).isRequired,
        'numberLiteralProp': _pt_.oneOf([
            1
        ]).isRequired,
        'boolLiteralProp': _pt_.oneOf([
            false
        ]).isRequired,
        'boolProp': _pt_.bool.isRequired,
        'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
        'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
        'optionalProp': _pt_.bool,
        'commentedProp': _pt_.string.isRequired,
        'union': _pt_.oneOf([
            \\"a\\",
            \\"b\\",
            \\"c\\"
        ]).isRequired,
        'unionAlias': _pt_.oneOfType([
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.shape({
                'lastName': _pt_.string.isRequired
            })
        ]).isRequired,
        'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
            _pt_.oneOf([
                true
            ]),
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.oneOf([
                \\"a\\"
            ]),
            _pt_.oneOf([
                \\"b\\"
            ]),
            _pt_.oneOf([
                \\"c\\"
            ]),
            _pt_.oneOf([
                5
            ]),
            _pt_.oneOf([
                \\"6\\"
            ]),
            _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            })
        ])).isRequired,
        'complexUnion': _pt_.oneOfType([
            _pt_.oneOf([
                true
            ]),
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.oneOf([
                \\"a\\"
            ]),
            _pt_.oneOf([
                \\"b\\"
            ]),
            _pt_.oneOf([
                \\"c\\"
            ]),
            _pt_.oneOf([
                5
            ]),
            _pt_.oneOf([
                \\"6\\"
            ]),
            _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            })
        ]).isRequired,
        'interfaceValue': _pt_.shape({
            'firstName': _pt_.string.isRequired
        }).isRequired,
        'intersecton': _pt_.shape({
            'firstName': _pt_.string.isRequired,
            'lastName': _pt_.string.isRequired
        }).isRequired,
        'intersectonAlias': _pt_.shape({
            'firstName': _pt_.string.isRequired,
            'lastName': _pt_.string.isRequired
        }).isRequired,
        'partialIntersectionAlias': _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        }).isRequired,
        'enum': _pt_.oneOf([
            0,
            1,
            2
        ]).isRequired,
        'optionalSelfReferencing': _pt_.shape({
            'numberProp': _pt_.number.isRequired,
            'stringLiteralProp': _pt_.oneOf([
                \\"hi\\"
            ]).isRequired,
            'numberLiteralProp': _pt_.oneOf([
                1
            ]).isRequired,
            'boolLiteralProp': _pt_.oneOf([
                false
            ]).isRequired,
            'boolProp': _pt_.bool.isRequired,
            'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
            'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
            'optionalProp': _pt_.bool,
            'commentedProp': _pt_.string.isRequired,
            'union': _pt_.oneOf([
                \\"a\\",
                \\"b\\",
                \\"c\\"
            ]).isRequired,
            'unionAlias': _pt_.oneOfType([
                _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }),
                _pt_.shape({
                    'lastName': _pt_.string.isRequired
                })
            ]).isRequired,
            'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
                _pt_.oneOf([
                    true
                ]),
                _pt_.shape({
                    'firstName': _pt_.any.isRequired
                }),
                _pt_.oneOf([
                    \\"a\\"
                ]),
                _pt_.oneOf([
                    \\"b\\"
                ]),
                _pt_.oneOf([
                    \\"c\\"
                ]),
                _pt_.oneOf([
                    5
                ]),
                _pt_.oneOf([
                    \\"6\\"
                ]),
                _pt_.shape({
                    'firstName': _pt_.any,
                    'lastName': _pt_.any
                })
            ])).isRequired,
            'complexUnion': _pt_.oneOfType([
                _pt_.oneOf([
                    true
                ]),
                _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }),
                _pt_.oneOf([
                    \\"a\\"
                ]),
                _pt_.oneOf([
                    \\"b\\"
                ]),
                _pt_.oneOf([
                    \\"c\\"
                ]),
                _pt_.oneOf([
                    5
                ]),
                _pt_.oneOf([
                    \\"6\\"
                ]),
                _pt_.shape({
                    'firstName': _pt_.string,
                    'lastName': _pt_.string
                })
            ]).isRequired,
            'interfaceValue': _pt_.shape({
                'firstName': _pt_.string.isRequired
            }).isRequired,
            'intersecton': _pt_.shape({
                'firstName': _pt_.string.isRequired,
                'lastName': _pt_.string.isRequired
            }).isRequired,
            'intersectonAlias': _pt_.shape({
                'firstName': _pt_.string.isRequired,
                'lastName': _pt_.string.isRequired
            }).isRequired,
            'partialIntersectionAlias': _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            }).isRequired,
            'enum': _pt_.oneOf([
                0,
                1,
                2
            ]).isRequired,
            'optionalSelfReferencing': _pt_.shape({
                'numberProp': _pt_.number.isRequired,
                'stringLiteralProp': _pt_.oneOf([
                    \\"hi\\"
                ]).isRequired,
                'numberLiteralProp': _pt_.oneOf([
                    1
                ]).isRequired,
                'boolLiteralProp': _pt_.oneOf([
                    false
                ]).isRequired,
                'boolProp': _pt_.bool.isRequired,
                'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
                'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
                'optionalProp': _pt_.bool,
                'commentedProp': _pt_.string.isRequired,
                'union': _pt_.oneOf([
                    \\"a\\",
                    \\"b\\",
                    \\"c\\"
                ]).isRequired,
                'unionAlias': _pt_.oneOfType([
                    _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }),
                    _pt_.shape({
                        'lastName': _pt_.any.isRequired
                    })
                ]).isRequired,
                'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any
                ])).isRequired,
                'complexUnion': _pt_.oneOfType([
                    _pt_.oneOf([
                        true
                    ]),
                    _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }),
                    _pt_.oneOf([
                        \\"a\\"
                    ]),
                    _pt_.oneOf([
                        \\"b\\"
                    ]),
                    _pt_.oneOf([
                        \\"c\\"
                    ]),
                    _pt_.oneOf([
                        5
                    ]),
                    _pt_.oneOf([
                        \\"6\\"
                    ]),
                    _pt_.shape({
                        'firstName': _pt_.any,
                        'lastName': _pt_.any
                    })
                ]).isRequired,
                'interfaceValue': _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }).isRequired,
                'intersecton': _pt_.shape({
                    'firstName': _pt_.string.isRequired,
                    'lastName': _pt_.string.isRequired
                }).isRequired,
                'intersectonAlias': _pt_.shape({
                    'firstName': _pt_.string.isRequired,
                    'lastName': _pt_.string.isRequired
                }).isRequired,
                'partialIntersectionAlias': _pt_.shape({
                    'firstName': _pt_.string,
                    'lastName': _pt_.string
                }).isRequired,
                'enum': _pt_.oneOf([
                    0,
                    1,
                    2
                ]).isRequired,
                'optionalSelfReferencing': _pt_.shape({
                    'numberProp': _pt_.number.isRequired,
                    'stringLiteralProp': _pt_.oneOf([
                        \\"hi\\"
                    ]).isRequired,
                    'numberLiteralProp': _pt_.oneOf([
                        1
                    ]).isRequired,
                    'boolLiteralProp': _pt_.oneOf([
                        false
                    ]).isRequired,
                    'boolProp': _pt_.bool.isRequired,
                    'arrayProp': _pt_.arrayOf(_pt_.any).isRequired,
                    'genericArrayProp': _pt_.arrayOf(_pt_.any).isRequired,
                    'optionalProp': _pt_.bool,
                    'commentedProp': _pt_.string.isRequired,
                    'union': _pt_.oneOf([
                        \\"a\\",
                        \\"b\\",
                        \\"c\\"
                    ]).isRequired,
                    'unionAlias': _pt_.oneOfType([
                        _pt_.any,
                        _pt_.any
                    ]).isRequired,
                    'arrayOfUnion': _pt_.arrayOf(_pt_.any).isRequired,
                    'complexUnion': _pt_.oneOfType([
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any
                    ]).isRequired,
                    'interfaceValue': _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }).isRequired,
                    'intersecton': _pt_.shape({
                        'firstName': _pt_.any.isRequired,
                        'lastName': _pt_.any.isRequired
                    }).isRequired,
                    'intersectonAlias': _pt_.shape({
                        'firstName': _pt_.any.isRequired,
                        'lastName': _pt_.any.isRequired
                    }).isRequired,
                    'partialIntersectionAlias': _pt_.shape({
                        'firstName': _pt_.any,
                        'lastName': _pt_.any
                    }).isRequired,
                    'enum': _pt_.oneOf([
                        0,
                        1,
                        2
                    ]).isRequired,
                    'optionalSelfReferencing': _pt_.shape({
                        'numberProp': _pt_.any.isRequired,
                        'stringLiteralProp': _pt_.any.isRequired,
                        'numberLiteralProp': _pt_.any.isRequired,
                        'boolLiteralProp': _pt_.any.isRequired,
                        'boolProp': _pt_.any.isRequired,
                        'arrayProp': _pt_.any.isRequired,
                        'genericArrayProp': _pt_.any.isRequired,
                        'optionalProp': _pt_.any,
                        'commentedProp': _pt_.any.isRequired,
                        'union': _pt_.any.isRequired,
                        'unionAlias': _pt_.any.isRequired,
                        'arrayOfUnion': _pt_.any.isRequired,
                        'complexUnion': _pt_.any.isRequired,
                        'interfaceValue': _pt_.any.isRequired,
                        'intersecton': _pt_.any.isRequired,
                        'intersectonAlias': _pt_.any.isRequired,
                        'partialIntersectionAlias': _pt_.any.isRequired,
                        'enum': _pt_.any.isRequired,
                        'optionalSelfReferencing': _pt_.any,
                        'css': _pt_.any,
                        'dom': _pt_.any,
                        'callable': _pt_.any.isRequired,
                        'newable': _pt_.any.isRequired,
                        'typeOf': _pt_.any.isRequired,
                        'id': _pt_.any.isRequired
                    }),
                    'css': _pt_.shape({}),
                    'dom': _pt_.arrayOf(_pt_.any),
                    'callable': _pt_.func.isRequired,
                    'newable': _pt_.func.isRequired,
                    'typeOf': _pt_.func.isRequired,
                    'id': _pt_.number.isRequired
                }),
                'css': _pt_.shape({}),
                'dom': _pt_.arrayOf(_pt_.string),
                'callable': _pt_.func.isRequired,
                'newable': _pt_.func.isRequired,
                'typeOf': _pt_.func.isRequired,
                'id': _pt_.number.isRequired
            }),
            'css': _pt_.shape({}),
            'dom': _pt_.arrayOf(_pt_.string),
            'callable': _pt_.func.isRequired,
            'newable': _pt_.func.isRequired,
            'typeOf': _pt_.func.isRequired,
            'id': _pt_.number.isRequired
        }),
        'css': _pt_.shape({}),
        'dom': _pt_.arrayOf(_pt_.string),
        'callable': _pt_.func.isRequired,
        'newable': _pt_.func.isRequired,
        'typeOf': _pt_.func.isRequired,
        'id': _pt_.number.isRequired
    }),
    'css': _pt_.shape({}),
    'dom': _pt_.arrayOf(_pt_.string),
    'callable': _pt_.func.isRequired,
    'newable': _pt_.func.isRequired,
    'typeOf': _pt_.func.isRequired,
    'id': _pt_.number.isRequired
};
exports.InferrableStatelessFunctionalTestComponent = (p) => {
    return React.createElement(exports.StatelessFunctionalTestComponent, Object.assign({}, p));
};
function DeclaredFunctionTestComponent(p) {
    return React.createElement(exports.StatelessFunctionalTestComponent, Object.assign({}, p));
}
exports.DeclaredFunctionTestComponent = DeclaredFunctionTestComponent;
"
`;

exports[`Transformer transforms TypeScript interfaces to PropTypes declarations on ES5 emitted code 1`] = `
"\\"use strict\\";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
var _pt_ = require(\\"prop-types\\");
var React = require(\\"react\\");
// ts-proptypes-transformer:generate
var TestComponent = /** @class */ (function (_super) {
    __extends(TestComponent, _super);
    function TestComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TestComponent.propTypes = {
        'numberProp': _pt_.number.isRequired,
        'stringLiteralProp': _pt_.oneOf([
            \\"hi\\"
        ]).isRequired,
        'numberLiteralProp': _pt_.oneOf([
            1
        ]).isRequired,
        'boolLiteralProp': _pt_.oneOf([
            false
        ]).isRequired,
        'boolProp': _pt_.bool.isRequired,
        'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
        'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
        'optionalProp': _pt_.bool,
        'commentedProp': _pt_.string.isRequired,
        'union': _pt_.oneOf([
            \\"a\\",
            \\"b\\",
            \\"c\\"
        ]).isRequired,
        'unionAlias': _pt_.oneOfType([
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.shape({
                'lastName': _pt_.string.isRequired
            })
        ]).isRequired,
        'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
            _pt_.oneOf([
                true
            ]),
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.oneOf([
                \\"a\\"
            ]),
            _pt_.oneOf([
                \\"b\\"
            ]),
            _pt_.oneOf([
                \\"c\\"
            ]),
            _pt_.oneOf([
                5
            ]),
            _pt_.oneOf([
                \\"6\\"
            ]),
            _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            })
        ])).isRequired,
        'complexUnion': _pt_.oneOfType([
            _pt_.oneOf([
                true
            ]),
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.oneOf([
                \\"a\\"
            ]),
            _pt_.oneOf([
                \\"b\\"
            ]),
            _pt_.oneOf([
                \\"c\\"
            ]),
            _pt_.oneOf([
                5
            ]),
            _pt_.oneOf([
                \\"6\\"
            ]),
            _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            })
        ]).isRequired,
        'interfaceValue': _pt_.shape({
            'firstName': _pt_.string.isRequired
        }).isRequired,
        'intersecton': _pt_.shape({
            'firstName': _pt_.string.isRequired,
            'lastName': _pt_.string.isRequired
        }).isRequired,
        'intersectonAlias': _pt_.shape({
            'firstName': _pt_.string.isRequired,
            'lastName': _pt_.string.isRequired
        }).isRequired,
        'partialIntersectionAlias': _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        }).isRequired,
        'enum': _pt_.oneOf([
            0,
            1,
            2
        ]).isRequired,
        'optionalSelfReferencing': _pt_.shape({
            'numberProp': _pt_.number.isRequired,
            'stringLiteralProp': _pt_.oneOf([
                \\"hi\\"
            ]).isRequired,
            'numberLiteralProp': _pt_.oneOf([
                1
            ]).isRequired,
            'boolLiteralProp': _pt_.oneOf([
                false
            ]).isRequired,
            'boolProp': _pt_.bool.isRequired,
            'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
            'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
            'optionalProp': _pt_.bool,
            'commentedProp': _pt_.string.isRequired,
            'union': _pt_.oneOf([
                \\"a\\",
                \\"b\\",
                \\"c\\"
            ]).isRequired,
            'unionAlias': _pt_.oneOfType([
                _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }),
                _pt_.shape({
                    'lastName': _pt_.string.isRequired
                })
            ]).isRequired,
            'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
                _pt_.oneOf([
                    true
                ]),
                _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }),
                _pt_.oneOf([
                    \\"a\\"
                ]),
                _pt_.oneOf([
                    \\"b\\"
                ]),
                _pt_.oneOf([
                    \\"c\\"
                ]),
                _pt_.oneOf([
                    5
                ]),
                _pt_.oneOf([
                    \\"6\\"
                ]),
                _pt_.shape({
                    'firstName': _pt_.string,
                    'lastName': _pt_.string
                })
            ])).isRequired,
            'complexUnion': _pt_.oneOfType([
                _pt_.oneOf([
                    true
                ]),
                _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }),
                _pt_.oneOf([
                    \\"a\\"
                ]),
                _pt_.oneOf([
                    \\"b\\"
                ]),
                _pt_.oneOf([
                    \\"c\\"
                ]),
                _pt_.oneOf([
                    5
                ]),
                _pt_.oneOf([
                    \\"6\\"
                ]),
                _pt_.shape({
                    'firstName': _pt_.string,
                    'lastName': _pt_.string
                })
            ]).isRequired,
            'interfaceValue': _pt_.shape({
                'firstName': _pt_.string.isRequired
            }).isRequired,
            'intersecton': _pt_.shape({
                'firstName': _pt_.string.isRequired,
                'lastName': _pt_.string.isRequired
            }).isRequired,
            'intersectonAlias': _pt_.shape({
                'firstName': _pt_.string.isRequired,
                'lastName': _pt_.string.isRequired
            }).isRequired,
            'partialIntersectionAlias': _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            }).isRequired,
            'enum': _pt_.oneOf([
                0,
                1,
                2
            ]).isRequired,
            'optionalSelfReferencing': _pt_.shape({
                'numberProp': _pt_.number.isRequired,
                'stringLiteralProp': _pt_.oneOf([
                    \\"hi\\"
                ]).isRequired,
                'numberLiteralProp': _pt_.oneOf([
                    1
                ]).isRequired,
                'boolLiteralProp': _pt_.oneOf([
                    false
                ]).isRequired,
                'boolProp': _pt_.bool.isRequired,
                'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
                'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
                'optionalProp': _pt_.bool,
                'commentedProp': _pt_.string.isRequired,
                'union': _pt_.oneOf([
                    \\"a\\",
                    \\"b\\",
                    \\"c\\"
                ]).isRequired,
                'unionAlias': _pt_.oneOfType([
                    _pt_.shape({
                        'firstName': _pt_.string.isRequired
                    }),
                    _pt_.shape({
                        'lastName': _pt_.string.isRequired
                    })
                ]).isRequired,
                'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
                    _pt_.oneOf([
                        true
                    ]),
                    _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }),
                    _pt_.oneOf([
                        \\"a\\"
                    ]),
                    _pt_.oneOf([
                        \\"b\\"
                    ]),
                    _pt_.oneOf([
                        \\"c\\"
                    ]),
                    _pt_.oneOf([
                        5
                    ]),
                    _pt_.oneOf([
                        \\"6\\"
                    ]),
                    _pt_.shape({
                        'firstName': _pt_.any,
                        'lastName': _pt_.any
                    })
                ])).isRequired,
                'complexUnion': _pt_.oneOfType([
                    _pt_.oneOf([
                        true
                    ]),
                    _pt_.shape({
                        'firstName': _pt_.string.isRequired
                    }),
                    _pt_.oneOf([
                        \\"a\\"
                    ]),
                    _pt_.oneOf([
                        \\"b\\"
                    ]),
                    _pt_.oneOf([
                        \\"c\\"
                    ]),
                    _pt_.oneOf([
                        5
                    ]),
                    _pt_.oneOf([
                        \\"6\\"
                    ]),
                    _pt_.shape({
                        'firstName': _pt_.string,
                        'lastName': _pt_.string
                    })
                ]).isRequired,
                'interfaceValue': _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }).isRequired,
                'intersecton': _pt_.shape({
                    'firstName': _pt_.string.isRequired,
                    'lastName': _pt_.string.isRequired
                }).isRequired,
                'intersectonAlias': _pt_.shape({
                    'firstName': _pt_.string.isRequired,
                    'lastName': _pt_.string.isRequired
                }).isRequired,
                'partialIntersectionAlias': _pt_.shape({
                    'firstName': _pt_.string,
                    'lastName': _pt_.string
                }).isRequired,
                'enum': _pt_.oneOf([
                    0,
                    1,
                    2
                ]).isRequired,
                'optionalSelfReferencing': _pt_.shape({
                    'numberProp': _pt_.number.isRequired,
                    'stringLiteralProp': _pt_.oneOf([
                        \\"hi\\"
                    ]).isRequired,
                    'numberLiteralProp': _pt_.oneOf([
                        1
                    ]).isRequired,
                    'boolLiteralProp': _pt_.oneOf([
                        false
                    ]).isRequired,
                    'boolProp': _pt_.bool.isRequired,
                    'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
                    'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
                    'optionalProp': _pt_.bool,
                    'commentedProp': _pt_.string.isRequired,
                    'union': _pt_.oneOf([
                        \\"a\\",
                        \\"b\\",
                        \\"c\\"
                    ]).isRequired,
                    'unionAlias': _pt_.oneOfType([
                        _pt_.shape({
                            'firstName': _pt_.any.isRequired
                        }),
                        _pt_.shape({
                            'lastName': _pt_.any.isRequired
                        })
                    ]).isRequired,
                    'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any
                    ])).isRequired,
                    'complexUnion': _pt_.oneOfType([
                        _pt_.oneOf([
                            true
                        ]),
                        _pt_.shape({
                            'firstName': _pt_.any.isRequired
                        }),
                        _pt_.oneOf([
                            \\"a\\"
                        ]),
                        _pt_.oneOf([
                            \\"b\\"
                        ]),
                        _pt_.oneOf([
                            \\"c\\"
                        ]),
                        _pt_.oneOf([
                            5
                        ]),
                        _pt_.oneOf([
                            \\"6\\"
                        ]),
                        _pt_.shape({
                            'firstName': _pt_.any,
                            'lastName': _pt_.any
                        })
                    ]).isRequired,
                    'interfaceValue': _pt_.shape({
                        'firstName': _pt_.string.isRequired
                    }).isRequired,
                    'intersecton': _pt_.shape({
                        'firstName': _pt_.string.isRequired,
                        'lastName': _pt_.string.isRequired
                    }).isRequired,
                    'intersectonAlias': _pt_.shape({
                        'firstName': _pt_.string.isRequired,
                        'lastName': _pt_.string.isRequired
                    }).isRequired,
                    'partialIntersectionAlias': _pt_.shape({
                        'firstName': _pt_.string,
                        'lastName': _pt_.string
                    }).isRequired,
                    'enum': _pt_.oneOf([
                        0,
                        1,
                        2
                    ]).isRequired,
                    'optionalSelfReferencing': _pt_.shape({
                        'numberProp': _pt_.number.isRequired,
                        'stringLiteralProp': _pt_.oneOf([
                            \\"hi\\"
                        ]).isRequired,
                        'numberLiteralProp': _pt_.oneOf([
                            1
                        ]).isRequired,
                        'boolLiteralProp': _pt_.oneOf([
                            false
                        ]).isRequired,
                        'boolProp': _pt_.bool.isRequired,
                        'arrayProp': _pt_.arrayOf(_pt_.any).isRequired,
                        'genericArrayProp': _pt_.arrayOf(_pt_.any).isRequired,
                        'optionalProp': _pt_.bool,
                        'commentedProp': _pt_.string.isRequired,
                        'union': _pt_.oneOf([
                            \\"a\\",
                            \\"b\\",
                            \\"c\\"
                        ]).isRequired,
                        'unionAlias': _pt_.oneOfType([
                            _pt_.any,
                            _pt_.any
                        ]).isRequired,
                        'arrayOfUnion': _pt_.arrayOf(_pt_.any).isRequired,
                        'complexUnion': _pt_.oneOfType([
                            _pt_.any,
                            _pt_.any,
                            _pt_.any,
                            _pt_.any,
                            _pt_.any,
                            _pt_.any,
                            _pt_.any,
                            _pt_.any
                        ]).isRequired,
                        'interfaceValue': _pt_.shape({
                            'firstName': _pt_.any.isRequired
                        }).isRequired,
                        'intersecton': _pt_.shape({
                            'firstName': _pt_.any.isRequired,
                            'lastName': _pt_.any.isRequired
                        }).isRequired,
                        'intersectonAlias': _pt_.shape({
                            'firstName': _pt_.any.isRequired,
                            'lastName': _pt_.any.isRequired
                        }).isRequired,
                        'partialIntersectionAlias': _pt_.shape({
                            'firstName': _pt_.any,
                            'lastName': _pt_.any
                        }).isRequired,
                        'enum': _pt_.oneOf([
                            0,
                            1,
                            2
                        ]).isRequired,
                        'optionalSelfReferencing': _pt_.shape({
                            'numberProp': _pt_.any.isRequired,
                            'stringLiteralProp': _pt_.any.isRequired,
                            'numberLiteralProp': _pt_.any.isRequired,
                            'boolLiteralProp': _pt_.any.isRequired,
                            'boolProp': _pt_.any.isRequired,
                            'arrayProp': _pt_.any.isRequired,
                            'genericArrayProp': _pt_.any.isRequired,
                            'optionalProp': _pt_.any,
                            'commentedProp': _pt_.any.isRequired,
                            'union': _pt_.any.isRequired,
                            'unionAlias': _pt_.any.isRequired,
                            'arrayOfUnion': _pt_.any.isRequired,
                            'complexUnion': _pt_.any.isRequired,
                            'interfaceValue': _pt_.any.isRequired,
                            'intersecton': _pt_.any.isRequired,
                            'intersectonAlias': _pt_.any.isRequired,
                            'partialIntersectionAlias': _pt_.any.isRequired,
                            'enum': _pt_.any.isRequired,
                            'optionalSelfReferencing': _pt_.any,
                            'css': _pt_.any,
                            'dom': _pt_.any,
                            'callable': _pt_.any.isRequired,
                            'newable': _pt_.any.isRequired,
                            'typeOf': _pt_.any.isRequired,
                            'id': _pt_.any.isRequired
                        }),
                        'css': _pt_.shape({}),
                        'dom': _pt_.arrayOf(_pt_.any),
                        'callable': _pt_.func.isRequired,
                        'newable': _pt_.func.isRequired,
                        'typeOf': _pt_.func.isRequired,
                        'id': _pt_.number.isRequired
                    }),
                    'css': _pt_.shape({}),
                    'dom': _pt_.arrayOf(_pt_.string),
                    'callable': _pt_.func.isRequired,
                    'newable': _pt_.func.isRequired,
                    'typeOf': _pt_.func.isRequired,
                    'id': _pt_.number.isRequired
                }),
                'css': _pt_.shape({}),
                'dom': _pt_.arrayOf(_pt_.string),
                'callable': _pt_.func.isRequired,
                'newable': _pt_.func.isRequired,
                'typeOf': _pt_.func.isRequired,
                'id': _pt_.number.isRequired
            }),
            'css': _pt_.shape({}),
            'dom': _pt_.arrayOf(_pt_.string),
            'callable': _pt_.func.isRequired,
            'newable': _pt_.func.isRequired,
            'typeOf': _pt_.func.isRequired,
            'id': _pt_.number.isRequired
        }),
        'css': _pt_.shape({}),
        'dom': _pt_.arrayOf(_pt_.string),
        'callable': _pt_.func.isRequired,
        'newable': _pt_.func.isRequired,
        'typeOf': _pt_.func.isRequired,
        'id': _pt_.number.isRequired
    };
    return TestComponent;
}(React.Component));
exports.TestComponent = TestComponent;
var AlreadyHasAStaticPropTypes = /** @class */ (function (_super) {
    __extends(AlreadyHasAStaticPropTypes, _super);
    function AlreadyHasAStaticPropTypes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AlreadyHasAStaticPropTypes.propTypes = {};
    return AlreadyHasAStaticPropTypes;
}(React.Component));
exports.AlreadyHasAStaticPropTypes = AlreadyHasAStaticPropTypes;
var NotAComponentClass = /** @class */ (function () {
    function NotAComponentClass() {
    }
    return NotAComponentClass;
}());
exports.NotAComponentClass = NotAComponentClass;
/* ts-proptypes-transformer:generate */
var GenericPropsTestComponent = /** @class */ (function (_super) {
    __extends(GenericPropsTestComponent, _super);
    function GenericPropsTestComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GenericPropsTestComponent.propTypes = {
        'propOfT': _pt_.any.isRequired,
        'propOfU': _pt_.any.isRequired,
        'propOfArrayOfT': _pt_.arrayOf(_pt_.any).isRequired,
        'propOfTAndU': _pt_.any.isRequired,
        'propOfArrayOfTAndU': _pt_.arrayOf(_pt_.any).isRequired
    };
    return GenericPropsTestComponent;
}(React.Component));
exports.GenericPropsTestComponent = GenericPropsTestComponent;
/** ts-proptypes-transformer:generate **/
var GenericPropsTestComponent2 = /** @class */ (function (_super) {
    __extends(GenericPropsTestComponent2, _super);
    function GenericPropsTestComponent2() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GenericPropsTestComponent2.propTypes = {
        'propOfT': _pt_.any.isRequired,
        'propOfU': _pt_.any.isRequired,
        'propOfArrayOfT': _pt_.arrayOf(_pt_.any).isRequired,
        'propOfTAndU': _pt_.shape({}).isRequired,
        'propOfArrayOfTAndU': _pt_.arrayOf(_pt_.shape({})).isRequired
    };
    return GenericPropsTestComponent2;
}(React.Component));
exports.GenericPropsTestComponent2 = GenericPropsTestComponent2;
// ts-proptypes-transformer:asdasdg
var GenericPropsTestComponent3 = /** @class */ (function (_super) {
    __extends(GenericPropsTestComponent3, _super);
    function GenericPropsTestComponent3() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GenericPropsTestComponent3.propTypes = {
        'propOfT': _pt_.shape({
            'firstName': _pt_.string.isRequired
        }).isRequired,
        'propOfU': _pt_.shape({
            'firstName': _pt_.string.isRequired
        }).isRequired,
        'propOfArrayOfT': _pt_.arrayOf(_pt_.shape({
            'firstName': _pt_.string.isRequired
        })).isRequired,
        'propOfTAndU': _pt_.shape({
            'firstName': _pt_.string.isRequired
        }).isRequired,
        'propOfArrayOfTAndU': _pt_.arrayOf(_pt_.shape({
            'firstName': _pt_.string.isRequired
        })).isRequired
    };
    return GenericPropsTestComponent3;
}(React.Component));
exports.GenericPropsTestComponent3 = GenericPropsTestComponent3;
// ts-proptypes-transformer:generate
var GenericPropsTestComponent4 = /** @class */ (function (_super) {
    __extends(GenericPropsTestComponent4, _super);
    function GenericPropsTestComponent4() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GenericPropsTestComponent4.propTypes = {
        'propOfT': _pt_.shape({
            'firstName': _pt_.string.isRequired
        }).isRequired,
        'propOfU': _pt_.shape({
            'lastName': _pt_.string.isRequired
        }).isRequired,
        'propOfArrayOfT': _pt_.arrayOf(_pt_.shape({
            'firstName': _pt_.string.isRequired
        })).isRequired,
        'propOfTAndU': _pt_.shape({
            'firstName': _pt_.string.isRequired,
            'lastName': _pt_.string.isRequired
        }).isRequired,
        'propOfArrayOfTAndU': _pt_.arrayOf(_pt_.shape({
            'firstName': _pt_.string.isRequired,
            'lastName': _pt_.string.isRequired
        })).isRequired
    };
    return GenericPropsTestComponent4;
}(React.Component));
exports.GenericPropsTestComponent4 = GenericPropsTestComponent4;
var GenericPropsTestComponent5 = /** @class */ (function (_super) {
    __extends(GenericPropsTestComponent5, _super);
    function GenericPropsTestComponent5() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GenericPropsTestComponent5.propTypes = {
        'propOfT': _pt_.shape({
            'firstName': _pt_.string.isRequired
        }).isRequired,
        'propOfU': _pt_.any.isRequired,
        'propOfArrayOfT': _pt_.arrayOf(_pt_.shape({
            'firstName': _pt_.string.isRequired
        })).isRequired,
        'propOfTAndU': _pt_.shape({
            'firstName': _pt_.string.isRequired
        }).isRequired,
        'propOfArrayOfTAndU': _pt_.arrayOf(_pt_.shape({
            'firstName': _pt_.string.isRequired
        })).isRequired
    };
    return GenericPropsTestComponent5;
}(React.Component));
exports.GenericPropsTestComponent5 = GenericPropsTestComponent5;
var GenericPropsTestComponent6 = /** @class */ (function (_super) {
    __extends(GenericPropsTestComponent6, _super);
    function GenericPropsTestComponent6() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GenericPropsTestComponent6.propTypes = {
        'propOfT': _pt_.shape({
            'firstName': _pt_.string.isRequired
        }).isRequired,
        'propOfU': _pt_.any.isRequired,
        'propOfArrayOfT': _pt_.arrayOf(_pt_.shape({
            'firstName': _pt_.string.isRequired
        })).isRequired,
        'propOfTAndU': _pt_.shape({
            'firstName': _pt_.string.isRequired
        }).isRequired,
        'propOfArrayOfTAndU': _pt_.arrayOf(_pt_.shape({
            'firstName': _pt_.string.isRequired
        })).isRequired
    };
    return GenericPropsTestComponent6;
}(GenericPropsTestComponent5));
exports.GenericPropsTestComponent6 = GenericPropsTestComponent6;
// BUG: U is not being combined here:
var GenericPropsTestComponent7 = /** @class */ (function (_super) {
    __extends(GenericPropsTestComponent7, _super);
    function GenericPropsTestComponent7() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GenericPropsTestComponent7.propTypes = {
        'propOfT': _pt_.shape({
            'firstName': _pt_.string.isRequired
        }).isRequired,
        'propOfU': _pt_.any.isRequired,
        'propOfArrayOfT': _pt_.arrayOf(_pt_.shape({
            'firstName': _pt_.string.isRequired
        })).isRequired,
        'propOfTAndU': _pt_.shape({
            'firstName': _pt_.string.isRequired
        }).isRequired,
        'propOfArrayOfTAndU': _pt_.arrayOf(_pt_.shape({
            'firstName': _pt_.string.isRequired
        })).isRequired
    };
    return GenericPropsTestComponent7;
}(GenericPropsTestComponent6));
exports.GenericPropsTestComponent7 = GenericPropsTestComponent7;
var AnyPropsComponent = /** @class */ (function (_super) {
    __extends(AnyPropsComponent, _super);
    function AnyPropsComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AnyPropsComponent.propTypes = {};
    return AnyPropsComponent;
}(React.Component));
exports.AnyPropsComponent = AnyPropsComponent;
exports.StatelessFunctionalTestComponent = function (p) {
    return React.createElement(AnyPropsComponent, __assign({}, p));
};
exports.StatelessFunctionalTestComponent.propTypes = {
    'numberProp': _pt_.number.isRequired,
    'stringLiteralProp': _pt_.oneOf([
        \\"hi\\"
    ]).isRequired,
    'numberLiteralProp': _pt_.oneOf([
        1
    ]).isRequired,
    'boolLiteralProp': _pt_.oneOf([
        false
    ]).isRequired,
    'boolProp': _pt_.bool.isRequired,
    'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
    'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
    'optionalProp': _pt_.bool,
    'commentedProp': _pt_.string.isRequired,
    'union': _pt_.oneOf([
        \\"a\\",
        \\"b\\",
        \\"c\\"
    ]).isRequired,
    'unionAlias': _pt_.oneOfType([
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.shape({
            'lastName': _pt_.string.isRequired
        })
    ]).isRequired,
    'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
        _pt_.oneOf([
            true
        ]),
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.oneOf([
            \\"a\\"
        ]),
        _pt_.oneOf([
            \\"b\\"
        ]),
        _pt_.oneOf([
            \\"c\\"
        ]),
        _pt_.oneOf([
            5
        ]),
        _pt_.oneOf([
            \\"6\\"
        ]),
        _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        })
    ])).isRequired,
    'complexUnion': _pt_.oneOfType([
        _pt_.oneOf([
            true
        ]),
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.oneOf([
            \\"a\\"
        ]),
        _pt_.oneOf([
            \\"b\\"
        ]),
        _pt_.oneOf([
            \\"c\\"
        ]),
        _pt_.oneOf([
            5
        ]),
        _pt_.oneOf([
            \\"6\\"
        ]),
        _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        })
    ]).isRequired,
    'interfaceValue': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'intersecton': _pt_.shape({
        'firstName': _pt_.string.isRequired,
        'lastName': _pt_.string.isRequired
    }).isRequired,
    'intersectonAlias': _pt_.shape({
        'firstName': _pt_.string.isRequired,
        'lastName': _pt_.string.isRequired
    }).isRequired,
    'partialIntersectionAlias': _pt_.shape({
        'firstName': _pt_.string,
        'lastName': _pt_.string
    }).isRequired,
    'enum': _pt_.oneOf([
        0,
        1,
        2
    ]).isRequired,
    'optionalSelfReferencing': _pt_.shape({
        'numberProp': _pt_.number.isRequired,
        'stringLiteralProp': _pt_.oneOf([
            \\"hi\\"
        ]).isRequired,
        'numberLiteralProp': _pt_.oneOf([
            1
        ]).isRequired,
        'boolLiteralProp': _pt_.oneOf([
            false
        ]).isRequired,
        'boolProp': _pt_.bool.isRequired,
        'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
        'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
        'optionalProp': _pt_.bool,
        'commentedProp': _pt_.string.isRequired,
        'union': _pt_.oneOf([
            \\"a\\",
            \\"b\\",
            \\"c\\"
        ]).isRequired,
        'unionAlias': _pt_.oneOfType([
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.shape({
                'lastName': _pt_.string.isRequired
            })
        ]).isRequired,
        'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
            _pt_.oneOf([
                true
            ]),
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.oneOf([
                \\"a\\"
            ]),
            _pt_.oneOf([
                \\"b\\"
            ]),
            _pt_.oneOf([
                \\"c\\"
            ]),
            _pt_.oneOf([
                5
            ]),
            _pt_.oneOf([
                \\"6\\"
            ]),
            _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            })
        ])).isRequired,
        'complexUnion': _pt_.oneOfType([
            _pt_.oneOf([
                true
            ]),
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.oneOf([
                \\"a\\"
            ]),
            _pt_.oneOf([
                \\"b\\"
            ]),
            _pt_.oneOf([
                \\"c\\"
            ]),
            _pt_.oneOf([
                5
            ]),
            _pt_.oneOf([
                \\"6\\"
            ]),
            _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            })
        ]).isRequired,
        'interfaceValue': _pt_.shape({
            'firstName': _pt_.string.isRequired
        }).isRequired,
        'intersecton': _pt_.shape({
            'firstName': _pt_.string.isRequired,
            'lastName': _pt_.string.isRequired
        }).isRequired,
        'intersectonAlias': _pt_.shape({
            'firstName': _pt_.string.isRequired,
            'lastName': _pt_.string.isRequired
        }).isRequired,
        'partialIntersectionAlias': _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        }).isRequired,
        'enum': _pt_.oneOf([
            0,
            1,
            2
        ]).isRequired,
        'optionalSelfReferencing': _pt_.shape({
            'numberProp': _pt_.number.isRequired,
            'stringLiteralProp': _pt_.oneOf([
                \\"hi\\"
            ]).isRequired,
            'numberLiteralProp': _pt_.oneOf([
                1
            ]).isRequired,
            'boolLiteralProp': _pt_.oneOf([
                false
            ]).isRequired,
            'boolProp': _pt_.bool.isRequired,
            'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
            'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
            'optionalProp': _pt_.bool,
            'commentedProp': _pt_.string.isRequired,
            'union': _pt_.oneOf([
                \\"a\\",
                \\"b\\",
                \\"c\\"
            ]).isRequired,
            'unionAlias': _pt_.oneOfType([
                _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }),
                _pt_.shape({
                    'lastName': _pt_.string.isRequired
                })
            ]).isRequired,
            'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
                _pt_.oneOf([
                    true
                ]),
                _pt_.shape({
                    'firstName': _pt_.any.isRequired
                }),
                _pt_.oneOf([
                    \\"a\\"
                ]),
                _pt_.oneOf([
                    \\"b\\"
                ]),
                _pt_.oneOf([
                    \\"c\\"
                ]),
                _pt_.oneOf([
                    5
                ]),
                _pt_.oneOf([
                    \\"6\\"
                ]),
                _pt_.shape({
                    'firstName': _pt_.any,
                    'lastName': _pt_.any
                })
            ])).isRequired,
            'complexUnion': _pt_.oneOfType([
                _pt_.oneOf([
                    true
                ]),
                _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }),
                _pt_.oneOf([
                    \\"a\\"
                ]),
                _pt_.oneOf([
                    \\"b\\"
                ]),
                _pt_.oneOf([
                    \\"c\\"
                ]),
                _pt_.oneOf([
                    5
                ]),
                _pt_.oneOf([
                    \\"6\\"
                ]),
                _pt_.shape({
                    'firstName': _pt_.string,
                    'lastName': _pt_.string
                })
            ]).isRequired,
            'interfaceValue': _pt_.shape({
                'firstName': _pt_.string.isRequired
            }).isRequired,
            'intersecton': _pt_.shape({
                'firstName': _pt_.string.isRequired,
                'lastName': _pt_.string.isRequired
            }).isRequired,
            'intersectonAlias': _pt_.shape({
                'firstName': _pt_.string.isRequired,
                'lastName': _pt_.string.isRequired
            }).isRequired,
            'partialIntersectionAlias': _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            }).isRequired,
            'enum': _pt_.oneOf([
                0,
                1,
                2
            ]).isRequired,
            'optionalSelfReferencing': _pt_.shape({
                'numberProp': _pt_.number.isRequired,
                'stringLiteralProp': _pt_.oneOf([
                    \\"hi\\"
                ]).isRequired,
                'numberLiteralProp': _pt_.oneOf([
                    1
                ]).isRequired,
                'boolLiteralProp': _pt_.oneOf([
                    false
                ]).isRequired,
                'boolProp': _pt_.bool.isRequired,
                'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
                'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
                'optionalProp': _pt_.bool,
                'commentedProp': _pt_.string.isRequired,
                'union': _pt_.oneOf([
                    \\"a\\",
                    \\"b\\",
                    \\"c\\"
                ]).isRequired,
                'unionAlias': _pt_.oneOfType([
                    _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }),
                    _pt_.shape({
                        'lastName': _pt_.any.isRequired
                    })
                ]).isRequired,
                'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any
                ])).isRequired,
                'complexUnion': _pt_.oneOfType([
                    _pt_.oneOf([
                        true
                    ]),
                    _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }),
                    _pt_.oneOf([
                        \\"a\\"
                    ]),
                    _pt_.oneOf([
                        \\"b\\"
                    ]),
                    _pt_.oneOf([
                        \\"c\\"
                    ]),
                    _pt_.oneOf([
                        5
                    ]),
                    _pt_.oneOf([
                        \\"6\\"
                    ]),
                    _pt_.shape({
                        'firstName': _pt_.any,
                        'lastName': _pt_.any
                    })
                ]).isRequired,
                'interfaceValue': _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }).isRequired,
                'intersecton': _pt_.shape({
                    'firstName': _pt_.string.isRequired,
                    'lastName': _pt_.string.isRequired
                }).isRequired,
                'intersectonAlias': _pt_.shape({
                    'firstName': _pt_.string.isRequired,
                    'lastName': _pt_.string.isRequired
                }).isRequired,
                'partialIntersectionAlias': _pt_.shape({
                    'firstName': _pt_.string,
                    'lastName': _pt_.string
                }).isRequired,
                'enum': _pt_.oneOf([
                    0,
                    1,
                    2
                ]).isRequired,
                'optionalSelfReferencing': _pt_.shape({
                    'numberProp': _pt_.number.isRequired,
                    'stringLiteralProp': _pt_.oneOf([
                        \\"hi\\"
                    ]).isRequired,
                    'numberLiteralProp': _pt_.oneOf([
                        1
                    ]).isRequired,
                    'boolLiteralProp': _pt_.oneOf([
                        false
                    ]).isRequired,
                    'boolProp': _pt_.bool.isRequired,
                    'arrayProp': _pt_.arrayOf(_pt_.any).isRequired,
                    'genericArrayProp': _pt_.arrayOf(_pt_.any).isRequired,
                    'optionalProp': _pt_.bool,
                    'commentedProp': _pt_.string.isRequired,
                    'union': _pt_.oneOf([
                        \\"a\\",
                        \\"b\\",
                        \\"c\\"
                    ]).isRequired,
                    'unionAlias': _pt_.oneOfType([
                        _pt_.any,
                        _pt_.any
                    ]).isRequired,
                    'arrayOfUnion': _pt_.arrayOf(_pt_.any).isRequired,
                    'complexUnion': _pt_.oneOfType([
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any
                    ]).isRequired,
                    'interfaceValue': _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }).isRequired,
                    'intersecton': _pt_.shape({
                        'firstName': _pt_.any.isRequired,
                        'lastName': _pt_.any.isRequired
                    }).isRequired,
                    'intersectonAlias': _pt_.shape({
                        'firstName': _pt_.any.isRequired,
                        'lastName': _pt_.any.isRequired
                    }).isRequired,
                    'partialIntersectionAlias': _pt_.shape({
                        'firstName': _pt_.any,
                        'lastName': _pt_.any
                    }).isRequired,
                    'enum': _pt_.oneOf([
                        0,
                        1,
                        2
                    ]).isRequired,
                    'optionalSelfReferencing': _pt_.shape({
                        'numberProp': _pt_.any.isRequired,
                        'stringLiteralProp': _pt_.any.isRequired,
                        'numberLiteralProp': _pt_.any.isRequired,
                        'boolLiteralProp': _pt_.any.isRequired,
                        'boolProp': _pt_.any.isRequired,
                        'arrayProp': _pt_.any.isRequired,
                        'genericArrayProp': _pt_.any.isRequired,
                        'optionalProp': _pt_.any,
                        'commentedProp': _pt_.any.isRequired,
                        'union': _pt_.any.isRequired,
                        'unionAlias': _pt_.any.isRequired,
                        'arrayOfUnion': _pt_.any.isRequired,
                        'complexUnion': _pt_.any.isRequired,
                        'interfaceValue': _pt_.any.isRequired,
                        'intersecton': _pt_.any.isRequired,
                        'intersectonAlias': _pt_.any.isRequired,
                        'partialIntersectionAlias': _pt_.any.isRequired,
                        'enum': _pt_.any.isRequired,
                        'optionalSelfReferencing': _pt_.any,
                        'css': _pt_.any,
                        'dom': _pt_.any,
                        'callable': _pt_.any.isRequired,
                        'newable': _pt_.any.isRequired,
                        'typeOf': _pt_.any.isRequired,
                        'id': _pt_.any.isRequired
                    }),
                    'css': _pt_.shape({}),
                    'dom': _pt_.arrayOf(_pt_.any),
                    'callable': _pt_.func.isRequired,
                    'newable': _pt_.func.isRequired,
                    'typeOf': _pt_.func.isRequired,
                    'id': _pt_.number.isRequired
                }),
                'css': _pt_.shape({}),
                'dom': _pt_.arrayOf(_pt_.string),
                'callable': _pt_.func.isRequired,
                'newable': _pt_.func.isRequired,
                'typeOf': _pt_.func.isRequired,
                'id': _pt_.number.isRequired
            }),
            'css': _pt_.shape({}),
            'dom': _pt_.arrayOf(_pt_.string),
            'callable': _pt_.func.isRequired,
            'newable': _pt_.func.isRequired,
            'typeOf': _pt_.func.isRequired,
            'id': _pt_.number.isRequired
        }),
        'css': _pt_.shape({}),
        'dom': _pt_.arrayOf(_pt_.string),
        'callable': _pt_.func.isRequired,
        'newable': _pt_.func.isRequired,
        'typeOf': _pt_.func.isRequired,
        'id': _pt_.number.isRequired
    }),
    'css': _pt_.shape({}),
    'dom': _pt_.arrayOf(_pt_.string),
    'callable': _pt_.func.isRequired,
    'newable': _pt_.func.isRequired,
    'typeOf': _pt_.func.isRequired,
    'id': _pt_.number.isRequired
};
var NonExportedStatelessFunctionalTestComponent = function (p) {
    return React.createElement(AnyPropsComponent, __assign({}, p));
};
NonExportedStatelessFunctionalTestComponent.propTypes = {
    'numberProp': _pt_.number.isRequired,
    'stringLiteralProp': _pt_.oneOf([
        \\"hi\\"
    ]).isRequired,
    'numberLiteralProp': _pt_.oneOf([
        1
    ]).isRequired,
    'boolLiteralProp': _pt_.oneOf([
        false
    ]).isRequired,
    'boolProp': _pt_.bool.isRequired,
    'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
    'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
    'optionalProp': _pt_.bool,
    'commentedProp': _pt_.string.isRequired,
    'union': _pt_.oneOf([
        \\"a\\",
        \\"b\\",
        \\"c\\"
    ]).isRequired,
    'unionAlias': _pt_.oneOfType([
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.shape({
            'lastName': _pt_.string.isRequired
        })
    ]).isRequired,
    'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
        _pt_.oneOf([
            true
        ]),
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.oneOf([
            \\"a\\"
        ]),
        _pt_.oneOf([
            \\"b\\"
        ]),
        _pt_.oneOf([
            \\"c\\"
        ]),
        _pt_.oneOf([
            5
        ]),
        _pt_.oneOf([
            \\"6\\"
        ]),
        _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        })
    ])).isRequired,
    'complexUnion': _pt_.oneOfType([
        _pt_.oneOf([
            true
        ]),
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.oneOf([
            \\"a\\"
        ]),
        _pt_.oneOf([
            \\"b\\"
        ]),
        _pt_.oneOf([
            \\"c\\"
        ]),
        _pt_.oneOf([
            5
        ]),
        _pt_.oneOf([
            \\"6\\"
        ]),
        _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        })
    ]).isRequired,
    'interfaceValue': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'intersecton': _pt_.shape({
        'firstName': _pt_.string.isRequired,
        'lastName': _pt_.string.isRequired
    }).isRequired,
    'intersectonAlias': _pt_.shape({
        'firstName': _pt_.string.isRequired,
        'lastName': _pt_.string.isRequired
    }).isRequired,
    'partialIntersectionAlias': _pt_.shape({
        'firstName': _pt_.string,
        'lastName': _pt_.string
    }).isRequired,
    'enum': _pt_.oneOf([
        0,
        1,
        2
    ]).isRequired,
    'optionalSelfReferencing': _pt_.shape({
        'numberProp': _pt_.number.isRequired,
        'stringLiteralProp': _pt_.oneOf([
            \\"hi\\"
        ]).isRequired,
        'numberLiteralProp': _pt_.oneOf([
            1
        ]).isRequired,
        'boolLiteralProp': _pt_.oneOf([
            false
        ]).isRequired,
        'boolProp': _pt_.bool.isRequired,
        'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
        'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
        'optionalProp': _pt_.bool,
        'commentedProp': _pt_.string.isRequired,
        'union': _pt_.oneOf([
            \\"a\\",
            \\"b\\",
            \\"c\\"
        ]).isRequired,
        'unionAlias': _pt_.oneOfType([
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.shape({
                'lastName': _pt_.string.isRequired
            })
        ]).isRequired,
        'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
            _pt_.oneOf([
                true
            ]),
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.oneOf([
                \\"a\\"
            ]),
            _pt_.oneOf([
                \\"b\\"
            ]),
            _pt_.oneOf([
                \\"c\\"
            ]),
            _pt_.oneOf([
                5
            ]),
            _pt_.oneOf([
                \\"6\\"
            ]),
            _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            })
        ])).isRequired,
        'complexUnion': _pt_.oneOfType([
            _pt_.oneOf([
                true
            ]),
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.oneOf([
                \\"a\\"
            ]),
            _pt_.oneOf([
                \\"b\\"
            ]),
            _pt_.oneOf([
                \\"c\\"
            ]),
            _pt_.oneOf([
                5
            ]),
            _pt_.oneOf([
                \\"6\\"
            ]),
            _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            })
        ]).isRequired,
        'interfaceValue': _pt_.shape({
            'firstName': _pt_.string.isRequired
        }).isRequired,
        'intersecton': _pt_.shape({
            'firstName': _pt_.string.isRequired,
            'lastName': _pt_.string.isRequired
        }).isRequired,
        'intersectonAlias': _pt_.shape({
            'firstName': _pt_.string.isRequired,
            'lastName': _pt_.string.isRequired
        }).isRequired,
        'partialIntersectionAlias': _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        }).isRequired,
        'enum': _pt_.oneOf([
            0,
            1,
            2
        ]).isRequired,
        'optionalSelfReferencing': _pt_.shape({
            'numberProp': _pt_.number.isRequired,
            'stringLiteralProp': _pt_.oneOf([
                \\"hi\\"
            ]).isRequired,
            'numberLiteralProp': _pt_.oneOf([
                1
            ]).isRequired,
            'boolLiteralProp': _pt_.oneOf([
                false
            ]).isRequired,
            'boolProp': _pt_.bool.isRequired,
            'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
            'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
            'optionalProp': _pt_.bool,
            'commentedProp': _pt_.string.isRequired,
            'union': _pt_.oneOf([
                \\"a\\",
                \\"b\\",
                \\"c\\"
            ]).isRequired,
            'unionAlias': _pt_.oneOfType([
                _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }),
                _pt_.shape({
                    'lastName': _pt_.string.isRequired
                })
            ]).isRequired,
            'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
                _pt_.oneOf([
                    true
                ]),
                _pt_.shape({
                    'firstName': _pt_.any.isRequired
                }),
                _pt_.oneOf([
                    \\"a\\"
                ]),
                _pt_.oneOf([
                    \\"b\\"
                ]),
                _pt_.oneOf([
                    \\"c\\"
                ]),
                _pt_.oneOf([
                    5
                ]),
                _pt_.oneOf([
                    \\"6\\"
                ]),
                _pt_.shape({
                    'firstName': _pt_.any,
                    'lastName': _pt_.any
                })
            ])).isRequired,
            'complexUnion': _pt_.oneOfType([
                _pt_.oneOf([
                    true
                ]),
                _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }),
                _pt_.oneOf([
                    \\"a\\"
                ]),
                _pt_.oneOf([
                    \\"b\\"
                ]),
                _pt_.oneOf([
                    \\"c\\"
                ]),
                _pt_.oneOf([
                    5
                ]),
                _pt_.oneOf([
                    \\"6\\"
                ]),
                _pt_.shape({
                    'firstName': _pt_.string,
                    'lastName': _pt_.string
                })
            ]).isRequired,
            'interfaceValue': _pt_.shape({
                'firstName': _pt_.string.isRequired
            }).isRequired,
            'intersecton': _pt_.shape({
                'firstName': _pt_.string.isRequired,
                'lastName': _pt_.string.isRequired
            }).isRequired,
            'intersectonAlias': _pt_.shape({
                'firstName': _pt_.string.isRequired,
                'lastName': _pt_.string.isRequired
            }).isRequired,
            'partialIntersectionAlias': _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            }).isRequired,
            'enum': _pt_.oneOf([
                0,
                1,
                2
            ]).isRequired,
            'optionalSelfReferencing': _pt_.shape({
                'numberProp': _pt_.number.isRequired,
                'stringLiteralProp': _pt_.oneOf([
                    \\"hi\\"
                ]).isRequired,
                'numberLiteralProp': _pt_.oneOf([
                    1
                ]).isRequired,
                'boolLiteralProp': _pt_.oneOf([
                    false
                ]).isRequired,
                'boolProp': _pt_.bool.isRequired,
                'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
                'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
                'optionalProp': _pt_.bool,
                'commentedProp': _pt_.string.isRequired,
                'union': _pt_.oneOf([
                    \\"a\\",
                    \\"b\\",
                    \\"c\\"
                ]).isRequired,
                'unionAlias': _pt_.oneOfType([
                    _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }),
                    _pt_.shape({
                        'lastName': _pt_.any.isRequired
                    })
                ]).isRequired,
                'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any
                ])).isRequired,
                'complexUnion': _pt_.oneOfType([
                    _pt_.oneOf([
                        true
                    ]),
                    _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }),
                    _pt_.oneOf([
                        \\"a\\"
                    ]),
                    _pt_.oneOf([
                        \\"b\\"
                    ]),
                    _pt_.oneOf([
                        \\"c\\"
                    ]),
                    _pt_.oneOf([
                        5
                    ]),
                    _pt_.oneOf([
                        \\"6\\"
                    ]),
                    _pt_.shape({
                        'firstName': _pt_.any,
                        'lastName': _pt_.any
                    })
                ]).isRequired,
                'interfaceValue': _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }).isRequired,
                'intersecton': _pt_.shape({
                    'firstName': _pt_.string.isRequired,
                    'lastName': _pt_.string.isRequired
                }).isRequired,
                'intersectonAlias': _pt_.shape({
                    'firstName': _pt_.string.isRequired,
                    'lastName': _pt_.string.isRequired
                }).isRequired,
                'partialIntersectionAlias': _pt_.shape({
                    'firstName': _pt_.string,
                    'lastName': _pt_.string
                }).isRequired,
                'enum': _pt_.oneOf([
                    0,
                    1,
                    2
                ]).isRequired,
                'optionalSelfReferencing': _pt_.shape({
                    'numberProp': _pt_.number.isRequired,
                    'stringLiteralProp': _pt_.oneOf([
                        \\"hi\\"
                    ]).isRequired,
                    'numberLiteralProp': _pt_.oneOf([
                        1
                    ]).isRequired,
                    'boolLiteralProp': _pt_.oneOf([
                        false
                    ]).isRequired,
                    'boolProp': _pt_.bool.isRequired,
                    'arrayProp': _pt_.arrayOf(_pt_.any).isRequired,
                    'genericArrayProp': _pt_.arrayOf(_pt_.any).isRequired,
                    'optionalProp': _pt_.bool,
                    'commentedProp': _pt_.string.isRequired,
                    'union': _pt_.oneOf([
                        \\"a\\",
                        \\"b\\",
                        \\"c\\"
                    ]).isRequired,
                    'unionAlias': _pt_.oneOfType([
                        _pt_.any,
                        _pt_.any
                    ]).isRequired,
                    'arrayOfUnion': _pt_.arrayOf(_pt_.any).isRequired,
                    'complexUnion': _pt_.oneOfType([
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any
                    ]).isRequired,
                    'interfaceValue': _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }).isRequired,
                    'intersecton': _pt_.shape({
                        'firstName': _pt_.any.isRequired,
                        'lastName': _pt_.any.isRequired
                    }).isRequired,
                    'intersectonAlias': _pt_.shape({
                        'firstName': _pt_.any.isRequired,
                        'lastName': _pt_.any.isRequired
                    }).isRequired,
                    'partialIntersectionAlias': _pt_.shape({
                        'firstName': _pt_.any,
                        'lastName': _pt_.any
                    }).isRequired,
                    'enum': _pt_.oneOf([
                        0,
                        1,
                        2
                    ]).isRequired,
                    'optionalSelfReferencing': _pt_.shape({
                        'numberProp': _pt_.any.isRequired,
                        'stringLiteralProp': _pt_.any.isRequired,
                        'numberLiteralProp': _pt_.any.isRequired,
                        'boolLiteralProp': _pt_.any.isRequired,
                        'boolProp': _pt_.any.isRequired,
                        'arrayProp': _pt_.any.isRequired,
                        'genericArrayProp': _pt_.any.isRequired,
                        'optionalProp': _pt_.any,
                        'commentedProp': _pt_.any.isRequired,
                        'union': _pt_.any.isRequired,
                        'unionAlias': _pt_.any.isRequired,
                        'arrayOfUnion': _pt_.any.isRequired,
                        'complexUnion': _pt_.any.isRequired,
                        'interfaceValue': _pt_.any.isRequired,
                        'intersecton': _pt_.any.isRequired,
                        'intersectonAlias': _pt_.any.isRequired,
                        'partialIntersectionAlias': _pt_.any.isRequired,
                        'enum': _pt_.any.isRequired,
                        'optionalSelfReferencing': _pt_.any,
                        'css': _pt_.any,
                        'dom': _pt_.any,
                        'callable': _pt_.any.isRequired,
                        'newable': _pt_.any.isRequired,
                        'typeOf': _pt_.any.isRequired,
                        'id': _pt_.any.isRequired
                    }),
                    'css': _pt_.shape({}),
                    'dom': _pt_.arrayOf(_pt_.any),
                    'callable': _pt_.func.isRequired,
                    'newable': _pt_.func.isRequired,
                    'typeOf': _pt_.func.isRequired,
                    'id': _pt_.number.isRequired
                }),
                'css': _pt_.shape({}),
                'dom': _pt_.arrayOf(_pt_.string),
                'callable': _pt_.func.isRequired,
                'newable': _pt_.func.isRequired,
                'typeOf': _pt_.func.isRequired,
                'id': _pt_.number.isRequired
            }),
            'css': _pt_.shape({}),
            'dom': _pt_.arrayOf(_pt_.string),
            'callable': _pt_.func.isRequired,
            'newable': _pt_.func.isRequired,
            'typeOf': _pt_.func.isRequired,
            'id': _pt_.number.isRequired
        }),
        'css': _pt_.shape({}),
        'dom': _pt_.arrayOf(_pt_.string),
        'callable': _pt_.func.isRequired,
        'newable': _pt_.func.isRequired,
        'typeOf': _pt_.func.isRequired,
        'id': _pt_.number.isRequired
    }),
    'css': _pt_.shape({}),
    'dom': _pt_.arrayOf(_pt_.string),
    'callable': _pt_.func.isRequired,
    'newable': _pt_.func.isRequired,
    'typeOf': _pt_.func.isRequired,
    'id': _pt_.number.isRequired
};
exports.InferrableStatelessFunctionalTestComponent = function (p) {
    return React.createElement(exports.StatelessFunctionalTestComponent, __assign({}, p));
};
function DeclaredFunctionTestComponent(p) {
    return React.createElement(exports.StatelessFunctionalTestComponent, __assign({}, p));
}
exports.DeclaredFunctionTestComponent = DeclaredFunctionTestComponent;
"
`;

exports[`Transformer transforms TypeScript interfaces to PropTypes declarations on emitted code 1`] = `
"import * as _pt_ from \\"prop-types\\";
import * as React from 'react';
// ts-proptypes-transformer:generate
export class TestComponent extends React.Component {
}
TestComponent.propTypes = {
    'numberProp': _pt_.number.isRequired,
    'stringLiteralProp': _pt_.oneOf([
        \\"hi\\"
    ]).isRequired,
    'numberLiteralProp': _pt_.oneOf([
        1
    ]).isRequired,
    'boolLiteralProp': _pt_.oneOf([
        false
    ]).isRequired,
    'boolProp': _pt_.bool.isRequired,
    'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
    'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
    'optionalProp': _pt_.bool,
    'commentedProp': _pt_.string.isRequired,
    'union': _pt_.oneOf([
        \\"a\\",
        \\"b\\",
        \\"c\\"
    ]).isRequired,
    'unionAlias': _pt_.oneOfType([
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.shape({
            'lastName': _pt_.string.isRequired
        })
    ]).isRequired,
    'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
        _pt_.oneOf([
            true
        ]),
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.oneOf([
            \\"a\\"
        ]),
        _pt_.oneOf([
            \\"b\\"
        ]),
        _pt_.oneOf([
            \\"c\\"
        ]),
        _pt_.oneOf([
            5
        ]),
        _pt_.oneOf([
            \\"6\\"
        ]),
        _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        })
    ])).isRequired,
    'complexUnion': _pt_.oneOfType([
        _pt_.oneOf([
            true
        ]),
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.oneOf([
            \\"a\\"
        ]),
        _pt_.oneOf([
            \\"b\\"
        ]),
        _pt_.oneOf([
            \\"c\\"
        ]),
        _pt_.oneOf([
            5
        ]),
        _pt_.oneOf([
            \\"6\\"
        ]),
        _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        })
    ]).isRequired,
    'interfaceValue': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'intersecton': _pt_.shape({
        'firstName': _pt_.string.isRequired,
        'lastName': _pt_.string.isRequired
    }).isRequired,
    'intersectonAlias': _pt_.shape({
        'firstName': _pt_.string.isRequired,
        'lastName': _pt_.string.isRequired
    }).isRequired,
    'partialIntersectionAlias': _pt_.shape({
        'firstName': _pt_.string,
        'lastName': _pt_.string
    }).isRequired,
    'enum': _pt_.oneOf([
        0,
        1,
        2
    ]).isRequired,
    'optionalSelfReferencing': _pt_.shape({
        'numberProp': _pt_.number.isRequired,
        'stringLiteralProp': _pt_.oneOf([
            \\"hi\\"
        ]).isRequired,
        'numberLiteralProp': _pt_.oneOf([
            1
        ]).isRequired,
        'boolLiteralProp': _pt_.oneOf([
            false
        ]).isRequired,
        'boolProp': _pt_.bool.isRequired,
        'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
        'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
        'optionalProp': _pt_.bool,
        'commentedProp': _pt_.string.isRequired,
        'union': _pt_.oneOf([
            \\"a\\",
            \\"b\\",
            \\"c\\"
        ]).isRequired,
        'unionAlias': _pt_.oneOfType([
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.shape({
                'lastName': _pt_.string.isRequired
            })
        ]).isRequired,
        'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
            _pt_.oneOf([
                true
            ]),
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.oneOf([
                \\"a\\"
            ]),
            _pt_.oneOf([
                \\"b\\"
            ]),
            _pt_.oneOf([
                \\"c\\"
            ]),
            _pt_.oneOf([
                5
            ]),
            _pt_.oneOf([
                \\"6\\"
            ]),
            _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            })
        ])).isRequired,
        'complexUnion': _pt_.oneOfType([
            _pt_.oneOf([
                true
            ]),
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.oneOf([
                \\"a\\"
            ]),
            _pt_.oneOf([
                \\"b\\"
            ]),
            _pt_.oneOf([
                \\"c\\"
            ]),
            _pt_.oneOf([
                5
            ]),
            _pt_.oneOf([
                \\"6\\"
            ]),
            _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            })
        ]).isRequired,
        'interfaceValue': _pt_.shape({
            'firstName': _pt_.string.isRequired
        }).isRequired,
        'intersecton': _pt_.shape({
            'firstName': _pt_.string.isRequired,
            'lastName': _pt_.string.isRequired
        }).isRequired,
        'intersectonAlias': _pt_.shape({
            'firstName': _pt_.string.isRequired,
            'lastName': _pt_.string.isRequired
        }).isRequired,
        'partialIntersectionAlias': _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        }).isRequired,
        'enum': _pt_.oneOf([
            0,
            1,
            2
        ]).isRequired,
        'optionalSelfReferencing': _pt_.shape({
            'numberProp': _pt_.number.isRequired,
            'stringLiteralProp': _pt_.oneOf([
                \\"hi\\"
            ]).isRequired,
            'numberLiteralProp': _pt_.oneOf([
                1
            ]).isRequired,
            'boolLiteralProp': _pt_.oneOf([
                false
            ]).isRequired,
            'boolProp': _pt_.bool.isRequired,
            'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
            'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
            'optionalProp': _pt_.bool,
            'commentedProp': _pt_.string.isRequired,
            'union': _pt_.oneOf([
                \\"a\\",
                \\"b\\",
                \\"c\\"
            ]).isRequired,
            'unionAlias': _pt_.oneOfType([
                _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }),
                _pt_.shape({
                    'lastName': _pt_.string.isRequired
                })
            ]).isRequired,
            'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
                _pt_.oneOf([
                    true
                ]),
                _pt_.shape({
                    'firstName': _pt_.any.isRequired
                }),
                _pt_.oneOf([
                    \\"a\\"
                ]),
                _pt_.oneOf([
                    \\"b\\"
                ]),
                _pt_.oneOf([
                    \\"c\\"
                ]),
                _pt_.oneOf([
                    5
                ]),
                _pt_.oneOf([
                    \\"6\\"
                ]),
                _pt_.shape({
                    'firstName': _pt_.any,
                    'lastName': _pt_.any
                })
            ])).isRequired,
            'complexUnion': _pt_.oneOfType([
                _pt_.oneOf([
                    true
                ]),
                _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }),
                _pt_.oneOf([
                    \\"a\\"
                ]),
                _pt_.oneOf([
                    \\"b\\"
                ]),
                _pt_.oneOf([
                    \\"c\\"
                ]),
                _pt_.oneOf([
                    5
                ]),
                _pt_.oneOf([
                    \\"6\\"
                ]),
                _pt_.shape({
                    'firstName': _pt_.string,
                    'lastName': _pt_.string
                })
            ]).isRequired,
            'interfaceValue': _pt_.shape({
                'firstName': _pt_.string.isRequired
            }).isRequired,
            'intersecton': _pt_.shape({
                'firstName': _pt_.string.isRequired,
                'lastName': _pt_.string.isRequired
            }).isRequired,
            'intersectonAlias': _pt_.shape({
                'firstName': _pt_.string.isRequired,
                'lastName': _pt_.string.isRequired
            }).isRequired,
            'partialIntersectionAlias': _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            }).isRequired,
            'enum': _pt_.oneOf([
                0,
                1,
                2
            ]).isRequired,
            'optionalSelfReferencing': _pt_.shape({
                'numberProp': _pt_.number.isRequired,
                'stringLiteralProp': _pt_.oneOf([
                    \\"hi\\"
                ]).isRequired,
                'numberLiteralProp': _pt_.oneOf([
                    1
                ]).isRequired,
                'boolLiteralProp': _pt_.oneOf([
                    false
                ]).isRequired,
                'boolProp': _pt_.bool.isRequired,
                'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
                'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
                'optionalProp': _pt_.bool,
                'commentedProp': _pt_.string.isRequired,
                'union': _pt_.oneOf([
                    \\"a\\",
                    \\"b\\",
                    \\"c\\"
                ]).isRequired,
                'unionAlias': _pt_.oneOfType([
                    _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }),
                    _pt_.shape({
                        'lastName': _pt_.any.isRequired
                    })
                ]).isRequired,
                'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any
                ])).isRequired,
                'complexUnion': _pt_.oneOfType([
                    _pt_.oneOf([
                        true
                    ]),
                    _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }),
                    _pt_.oneOf([
                        \\"a\\"
                    ]),
                    _pt_.oneOf([
                        \\"b\\"
                    ]),
                    _pt_.oneOf([
                        \\"c\\"
                    ]),
                    _pt_.oneOf([
                        5
                    ]),
                    _pt_.oneOf([
                        \\"6\\"
                    ]),
                    _pt_.shape({
                        'firstName': _pt_.any,
                        'lastName': _pt_.any
                    })
                ]).isRequired,
                'interfaceValue': _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }).isRequired,
                'intersecton': _pt_.shape({
                    'firstName': _pt_.string.isRequired,
                    'lastName': _pt_.string.isRequired
                }).isRequired,
                'intersectonAlias': _pt_.shape({
                    'firstName': _pt_.string.isRequired,
                    'lastName': _pt_.string.isRequired
                }).isRequired,
                'partialIntersectionAlias': _pt_.shape({
                    'firstName': _pt_.string,
                    'lastName': _pt_.string
                }).isRequired,
                'enum': _pt_.oneOf([
                    0,
                    1,
                    2
                ]).isRequired,
                'optionalSelfReferencing': _pt_.shape({
                    'numberProp': _pt_.number.isRequired,
                    'stringLiteralProp': _pt_.oneOf([
                        \\"hi\\"
                    ]).isRequired,
                    'numberLiteralProp': _pt_.oneOf([
                        1
                    ]).isRequired,
                    'boolLiteralProp': _pt_.oneOf([
                        false
                    ]).isRequired,
                    'boolProp': _pt_.bool.isRequired,
                    'arrayProp': _pt_.arrayOf(_pt_.any).isRequired,
                    'genericArrayProp': _pt_.arrayOf(_pt_.any).isRequired,
                    'optionalProp': _pt_.bool,
                    'commentedProp': _pt_.string.isRequired,
                    'union': _pt_.oneOf([
                        \\"a\\",
                        \\"b\\",
                        \\"c\\"
                    ]).isRequired,
                    'unionAlias': _pt_.oneOfType([
                        _pt_.any,
                        _pt_.any
                    ]).isRequired,
                    'arrayOfUnion': _pt_.arrayOf(_pt_.any).isRequired,
                    'complexUnion': _pt_.oneOfType([
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any
                    ]).isRequired,
                    'interfaceValue': _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }).isRequired,
                    'intersecton': _pt_.shape({
                        'firstName': _pt_.any.isRequired,
                        'lastName': _pt_.any.isRequired
                    }).isRequired,
                    'intersectonAlias': _pt_.shape({
                        'firstName': _pt_.any.isRequired,
                        'lastName': _pt_.any.isRequired
                    }).isRequired,
                    'partialIntersectionAlias': _pt_.shape({
                        'firstName': _pt_.any,
                        'lastName': _pt_.any
                    }).isRequired,
                    'enum': _pt_.oneOf([
                        0,
                        1,
                        2
                    ]).isRequired,
                    'optionalSelfReferencing': _pt_.shape({
                        'numberProp': _pt_.any.isRequired,
                        'stringLiteralProp': _pt_.any.isRequired,
                        'numberLiteralProp': _pt_.any.isRequired,
                        'boolLiteralProp': _pt_.any.isRequired,
                        'boolProp': _pt_.any.isRequired,
                        'arrayProp': _pt_.any.isRequired,
                        'genericArrayProp': _pt_.any.isRequired,
                        'optionalProp': _pt_.any,
                        'commentedProp': _pt_.any.isRequired,
                        'union': _pt_.any.isRequired,
                        'unionAlias': _pt_.any.isRequired,
                        'arrayOfUnion': _pt_.any.isRequired,
                        'complexUnion': _pt_.any.isRequired,
                        'interfaceValue': _pt_.any.isRequired,
                        'intersecton': _pt_.any.isRequired,
                        'intersectonAlias': _pt_.any.isRequired,
                        'partialIntersectionAlias': _pt_.any.isRequired,
                        'enum': _pt_.any.isRequired,
                        'optionalSelfReferencing': _pt_.any,
                        'css': _pt_.any,
                        'dom': _pt_.any,
                        'callable': _pt_.any.isRequired,
                        'newable': _pt_.any.isRequired,
                        'typeOf': _pt_.any.isRequired,
                        'id': _pt_.any.isRequired
                    }),
                    'css': _pt_.shape({}),
                    'dom': _pt_.arrayOf(_pt_.any),
                    'callable': _pt_.func.isRequired,
                    'newable': _pt_.func.isRequired,
                    'typeOf': _pt_.func.isRequired,
                    'id': _pt_.number.isRequired
                }),
                'css': _pt_.shape({}),
                'dom': _pt_.arrayOf(_pt_.string),
                'callable': _pt_.func.isRequired,
                'newable': _pt_.func.isRequired,
                'typeOf': _pt_.func.isRequired,
                'id': _pt_.number.isRequired
            }),
            'css': _pt_.shape({}),
            'dom': _pt_.arrayOf(_pt_.string),
            'callable': _pt_.func.isRequired,
            'newable': _pt_.func.isRequired,
            'typeOf': _pt_.func.isRequired,
            'id': _pt_.number.isRequired
        }),
        'css': _pt_.shape({}),
        'dom': _pt_.arrayOf(_pt_.string),
        'callable': _pt_.func.isRequired,
        'newable': _pt_.func.isRequired,
        'typeOf': _pt_.func.isRequired,
        'id': _pt_.number.isRequired
    }),
    'css': _pt_.shape({}),
    'dom': _pt_.arrayOf(_pt_.string),
    'callable': _pt_.func.isRequired,
    'newable': _pt_.func.isRequired,
    'typeOf': _pt_.func.isRequired,
    'id': _pt_.number.isRequired
};
export class AlreadyHasAStaticPropTypes extends React.Component {
}
AlreadyHasAStaticPropTypes.propTypes = {};
export class NotAComponentClass {
}
/* ts-proptypes-transformer:generate */
export class GenericPropsTestComponent extends React.Component {
}
GenericPropsTestComponent.propTypes = {
    'propOfT': _pt_.any.isRequired,
    'propOfU': _pt_.any.isRequired,
    'propOfArrayOfT': _pt_.arrayOf(_pt_.any).isRequired,
    'propOfTAndU': _pt_.any.isRequired,
    'propOfArrayOfTAndU': _pt_.arrayOf(_pt_.any).isRequired
};
/** ts-proptypes-transformer:generate **/
export class GenericPropsTestComponent2 extends React.Component {
}
GenericPropsTestComponent2.propTypes = {
    'propOfT': _pt_.any.isRequired,
    'propOfU': _pt_.any.isRequired,
    'propOfArrayOfT': _pt_.arrayOf(_pt_.any).isRequired,
    'propOfTAndU': _pt_.shape({}).isRequired,
    'propOfArrayOfTAndU': _pt_.arrayOf(_pt_.shape({})).isRequired
};
// ts-proptypes-transformer:asdasdg
export class GenericPropsTestComponent3 extends React.Component {
}
GenericPropsTestComponent3.propTypes = {
    'propOfT': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'propOfU': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'propOfArrayOfT': _pt_.arrayOf(_pt_.shape({
        'firstName': _pt_.string.isRequired
    })).isRequired,
    'propOfTAndU': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'propOfArrayOfTAndU': _pt_.arrayOf(_pt_.shape({
        'firstName': _pt_.string.isRequired
    })).isRequired
};
// ts-proptypes-transformer:generate
export class GenericPropsTestComponent4 extends React.Component {
}
GenericPropsTestComponent4.propTypes = {
    'propOfT': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'propOfU': _pt_.shape({
        'lastName': _pt_.string.isRequired
    }).isRequired,
    'propOfArrayOfT': _pt_.arrayOf(_pt_.shape({
        'firstName': _pt_.string.isRequired
    })).isRequired,
    'propOfTAndU': _pt_.shape({
        'firstName': _pt_.string.isRequired,
        'lastName': _pt_.string.isRequired
    }).isRequired,
    'propOfArrayOfTAndU': _pt_.arrayOf(_pt_.shape({
        'firstName': _pt_.string.isRequired,
        'lastName': _pt_.string.isRequired
    })).isRequired
};
export class GenericPropsTestComponent5 extends React.Component {
}
GenericPropsTestComponent5.propTypes = {
    'propOfT': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'propOfU': _pt_.any.isRequired,
    'propOfArrayOfT': _pt_.arrayOf(_pt_.shape({
        'firstName': _pt_.string.isRequired
    })).isRequired,
    'propOfTAndU': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'propOfArrayOfTAndU': _pt_.arrayOf(_pt_.shape({
        'firstName': _pt_.string.isRequired
    })).isRequired
};
export class GenericPropsTestComponent6 extends GenericPropsTestComponent5 {
}
GenericPropsTestComponent6.propTypes = {
    'propOfT': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'propOfU': _pt_.any.isRequired,
    'propOfArrayOfT': _pt_.arrayOf(_pt_.shape({
        'firstName': _pt_.string.isRequired
    })).isRequired,
    'propOfTAndU': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'propOfArrayOfTAndU': _pt_.arrayOf(_pt_.shape({
        'firstName': _pt_.string.isRequired
    })).isRequired
};
// BUG: U is not being combined here:
export class GenericPropsTestComponent7 extends GenericPropsTestComponent6 {
}
GenericPropsTestComponent7.propTypes = {
    'propOfT': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'propOfU': _pt_.any.isRequired,
    'propOfArrayOfT': _pt_.arrayOf(_pt_.shape({
        'firstName': _pt_.string.isRequired
    })).isRequired,
    'propOfTAndU': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'propOfArrayOfTAndU': _pt_.arrayOf(_pt_.shape({
        'firstName': _pt_.string.isRequired
    })).isRequired
};
export class AnyPropsComponent extends React.Component {
}
AnyPropsComponent.propTypes = {};
export const StatelessFunctionalTestComponent = (p) => {
    return <AnyPropsComponent {...p}/>;
};
StatelessFunctionalTestComponent.propTypes = {
    'numberProp': _pt_.number.isRequired,
    'stringLiteralProp': _pt_.oneOf([
        \\"hi\\"
    ]).isRequired,
    'numberLiteralProp': _pt_.oneOf([
        1
    ]).isRequired,
    'boolLiteralProp': _pt_.oneOf([
        false
    ]).isRequired,
    'boolProp': _pt_.bool.isRequired,
    'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
    'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
    'optionalProp': _pt_.bool,
    'commentedProp': _pt_.string.isRequired,
    'union': _pt_.oneOf([
        \\"a\\",
        \\"b\\",
        \\"c\\"
    ]).isRequired,
    'unionAlias': _pt_.oneOfType([
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.shape({
            'lastName': _pt_.string.isRequired
        })
    ]).isRequired,
    'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
        _pt_.oneOf([
            true
        ]),
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.oneOf([
            \\"a\\"
        ]),
        _pt_.oneOf([
            \\"b\\"
        ]),
        _pt_.oneOf([
            \\"c\\"
        ]),
        _pt_.oneOf([
            5
        ]),
        _pt_.oneOf([
            \\"6\\"
        ]),
        _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        })
    ])).isRequired,
    'complexUnion': _pt_.oneOfType([
        _pt_.oneOf([
            true
        ]),
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.oneOf([
            \\"a\\"
        ]),
        _pt_.oneOf([
            \\"b\\"
        ]),
        _pt_.oneOf([
            \\"c\\"
        ]),
        _pt_.oneOf([
            5
        ]),
        _pt_.oneOf([
            \\"6\\"
        ]),
        _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        })
    ]).isRequired,
    'interfaceValue': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'intersecton': _pt_.shape({
        'firstName': _pt_.string.isRequired,
        'lastName': _pt_.string.isRequired
    }).isRequired,
    'intersectonAlias': _pt_.shape({
        'firstName': _pt_.string.isRequired,
        'lastName': _pt_.string.isRequired
    }).isRequired,
    'partialIntersectionAlias': _pt_.shape({
        'firstName': _pt_.string,
        'lastName': _pt_.string
    }).isRequired,
    'enum': _pt_.oneOf([
        0,
        1,
        2
    ]).isRequired,
    'optionalSelfReferencing': _pt_.shape({
        'numberProp': _pt_.number.isRequired,
        'stringLiteralProp': _pt_.oneOf([
            \\"hi\\"
        ]).isRequired,
        'numberLiteralProp': _pt_.oneOf([
            1
        ]).isRequired,
        'boolLiteralProp': _pt_.oneOf([
            false
        ]).isRequired,
        'boolProp': _pt_.bool.isRequired,
        'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
        'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
        'optionalProp': _pt_.bool,
        'commentedProp': _pt_.string.isRequired,
        'union': _pt_.oneOf([
            \\"a\\",
            \\"b\\",
            \\"c\\"
        ]).isRequired,
        'unionAlias': _pt_.oneOfType([
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.shape({
                'lastName': _pt_.string.isRequired
            })
        ]).isRequired,
        'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
            _pt_.oneOf([
                true
            ]),
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.oneOf([
                \\"a\\"
            ]),
            _pt_.oneOf([
                \\"b\\"
            ]),
            _pt_.oneOf([
                \\"c\\"
            ]),
            _pt_.oneOf([
                5
            ]),
            _pt_.oneOf([
                \\"6\\"
            ]),
            _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            })
        ])).isRequired,
        'complexUnion': _pt_.oneOfType([
            _pt_.oneOf([
                true
            ]),
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.oneOf([
                \\"a\\"
            ]),
            _pt_.oneOf([
                \\"b\\"
            ]),
            _pt_.oneOf([
                \\"c\\"
            ]),
            _pt_.oneOf([
                5
            ]),
            _pt_.oneOf([
                \\"6\\"
            ]),
            _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            })
        ]).isRequired,
        'interfaceValue': _pt_.shape({
            'firstName': _pt_.string.isRequired
        }).isRequired,
        'intersecton': _pt_.shape({
            'firstName': _pt_.string.isRequired,
            'lastName': _pt_.string.isRequired
        }).isRequired,
        'intersectonAlias': _pt_.shape({
            'firstName': _pt_.string.isRequired,
            'lastName': _pt_.string.isRequired
        }).isRequired,
        'partialIntersectionAlias': _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        }).isRequired,
        'enum': _pt_.oneOf([
            0,
            1,
            2
        ]).isRequired,
        'optionalSelfReferencing': _pt_.shape({
            'numberProp': _pt_.number.isRequired,
            'stringLiteralProp': _pt_.oneOf([
                \\"hi\\"
            ]).isRequired,
            'numberLiteralProp': _pt_.oneOf([
                1
            ]).isRequired,
            'boolLiteralProp': _pt_.oneOf([
                false
            ]).isRequired,
            'boolProp': _pt_.bool.isRequired,
            'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
            'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
            'optionalProp': _pt_.bool,
            'commentedProp': _pt_.string.isRequired,
            'union': _pt_.oneOf([
                \\"a\\",
                \\"b\\",
                \\"c\\"
            ]).isRequired,
            'unionAlias': _pt_.oneOfType([
                _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }),
                _pt_.shape({
                    'lastName': _pt_.string.isRequired
                })
            ]).isRequired,
            'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
                _pt_.oneOf([
                    true
                ]),
                _pt_.shape({
                    'firstName': _pt_.any.isRequired
                }),
                _pt_.oneOf([
                    \\"a\\"
                ]),
                _pt_.oneOf([
                    \\"b\\"
                ]),
                _pt_.oneOf([
                    \\"c\\"
                ]),
                _pt_.oneOf([
                    5
                ]),
                _pt_.oneOf([
                    \\"6\\"
                ]),
                _pt_.shape({
                    'firstName': _pt_.any,
                    'lastName': _pt_.any
                })
            ])).isRequired,
            'complexUnion': _pt_.oneOfType([
                _pt_.oneOf([
                    true
                ]),
                _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }),
                _pt_.oneOf([
                    \\"a\\"
                ]),
                _pt_.oneOf([
                    \\"b\\"
                ]),
                _pt_.oneOf([
                    \\"c\\"
                ]),
                _pt_.oneOf([
                    5
                ]),
                _pt_.oneOf([
                    \\"6\\"
                ]),
                _pt_.shape({
                    'firstName': _pt_.string,
                    'lastName': _pt_.string
                })
            ]).isRequired,
            'interfaceValue': _pt_.shape({
                'firstName': _pt_.string.isRequired
            }).isRequired,
            'intersecton': _pt_.shape({
                'firstName': _pt_.string.isRequired,
                'lastName': _pt_.string.isRequired
            }).isRequired,
            'intersectonAlias': _pt_.shape({
                'firstName': _pt_.string.isRequired,
                'lastName': _pt_.string.isRequired
            }).isRequired,
            'partialIntersectionAlias': _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            }).isRequired,
            'enum': _pt_.oneOf([
                0,
                1,
                2
            ]).isRequired,
            'optionalSelfReferencing': _pt_.shape({
                'numberProp': _pt_.number.isRequired,
                'stringLiteralProp': _pt_.oneOf([
                    \\"hi\\"
                ]).isRequired,
                'numberLiteralProp': _pt_.oneOf([
                    1
                ]).isRequired,
                'boolLiteralProp': _pt_.oneOf([
                    false
                ]).isRequired,
                'boolProp': _pt_.bool.isRequired,
                'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
                'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
                'optionalProp': _pt_.bool,
                'commentedProp': _pt_.string.isRequired,
                'union': _pt_.oneOf([
                    \\"a\\",
                    \\"b\\",
                    \\"c\\"
                ]).isRequired,
                'unionAlias': _pt_.oneOfType([
                    _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }),
                    _pt_.shape({
                        'lastName': _pt_.any.isRequired
                    })
                ]).isRequired,
                'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any
                ])).isRequired,
                'complexUnion': _pt_.oneOfType([
                    _pt_.oneOf([
                        true
                    ]),
                    _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }),
                    _pt_.oneOf([
                        \\"a\\"
                    ]),
                    _pt_.oneOf([
                        \\"b\\"
                    ]),
                    _pt_.oneOf([
                        \\"c\\"
                    ]),
                    _pt_.oneOf([
                        5
                    ]),
                    _pt_.oneOf([
                        \\"6\\"
                    ]),
                    _pt_.shape({
                        'firstName': _pt_.any,
                        'lastName': _pt_.any
                    })
                ]).isRequired,
                'interfaceValue': _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }).isRequired,
                'intersecton': _pt_.shape({
                    'firstName': _pt_.string.isRequired,
                    'lastName': _pt_.string.isRequired
                }).isRequired,
                'intersectonAlias': _pt_.shape({
                    'firstName': _pt_.string.isRequired,
                    'lastName': _pt_.string.isRequired
                }).isRequired,
                'partialIntersectionAlias': _pt_.shape({
                    'firstName': _pt_.string,
                    'lastName': _pt_.string
                }).isRequired,
                'enum': _pt_.oneOf([
                    0,
                    1,
                    2
                ]).isRequired,
                'optionalSelfReferencing': _pt_.shape({
                    'numberProp': _pt_.number.isRequired,
                    'stringLiteralProp': _pt_.oneOf([
                        \\"hi\\"
                    ]).isRequired,
                    'numberLiteralProp': _pt_.oneOf([
                        1
                    ]).isRequired,
                    'boolLiteralProp': _pt_.oneOf([
                        false
                    ]).isRequired,
                    'boolProp': _pt_.bool.isRequired,
                    'arrayProp': _pt_.arrayOf(_pt_.any).isRequired,
                    'genericArrayProp': _pt_.arrayOf(_pt_.any).isRequired,
                    'optionalProp': _pt_.bool,
                    'commentedProp': _pt_.string.isRequired,
                    'union': _pt_.oneOf([
                        \\"a\\",
                        \\"b\\",
                        \\"c\\"
                    ]).isRequired,
                    'unionAlias': _pt_.oneOfType([
                        _pt_.any,
                        _pt_.any
                    ]).isRequired,
                    'arrayOfUnion': _pt_.arrayOf(_pt_.any).isRequired,
                    'complexUnion': _pt_.oneOfType([
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any
                    ]).isRequired,
                    'interfaceValue': _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }).isRequired,
                    'intersecton': _pt_.shape({
                        'firstName': _pt_.any.isRequired,
                        'lastName': _pt_.any.isRequired
                    }).isRequired,
                    'intersectonAlias': _pt_.shape({
                        'firstName': _pt_.any.isRequired,
                        'lastName': _pt_.any.isRequired
                    }).isRequired,
                    'partialIntersectionAlias': _pt_.shape({
                        'firstName': _pt_.any,
                        'lastName': _pt_.any
                    }).isRequired,
                    'enum': _pt_.oneOf([
                        0,
                        1,
                        2
                    ]).isRequired,
                    'optionalSelfReferencing': _pt_.shape({
                        'numberProp': _pt_.any.isRequired,
                        'stringLiteralProp': _pt_.any.isRequired,
                        'numberLiteralProp': _pt_.any.isRequired,
                        'boolLiteralProp': _pt_.any.isRequired,
                        'boolProp': _pt_.any.isRequired,
                        'arrayProp': _pt_.any.isRequired,
                        'genericArrayProp': _pt_.any.isRequired,
                        'optionalProp': _pt_.any,
                        'commentedProp': _pt_.any.isRequired,
                        'union': _pt_.any.isRequired,
                        'unionAlias': _pt_.any.isRequired,
                        'arrayOfUnion': _pt_.any.isRequired,
                        'complexUnion': _pt_.any.isRequired,
                        'interfaceValue': _pt_.any.isRequired,
                        'intersecton': _pt_.any.isRequired,
                        'intersectonAlias': _pt_.any.isRequired,
                        'partialIntersectionAlias': _pt_.any.isRequired,
                        'enum': _pt_.any.isRequired,
                        'optionalSelfReferencing': _pt_.any,
                        'css': _pt_.any,
                        'dom': _pt_.any,
                        'callable': _pt_.any.isRequired,
                        'newable': _pt_.any.isRequired,
                        'typeOf': _pt_.any.isRequired,
                        'id': _pt_.any.isRequired
                    }),
                    'css': _pt_.shape({}),
                    'dom': _pt_.arrayOf(_pt_.any),
                    'callable': _pt_.func.isRequired,
                    'newable': _pt_.func.isRequired,
                    'typeOf': _pt_.func.isRequired,
                    'id': _pt_.number.isRequired
                }),
                'css': _pt_.shape({}),
                'dom': _pt_.arrayOf(_pt_.string),
                'callable': _pt_.func.isRequired,
                'newable': _pt_.func.isRequired,
                'typeOf': _pt_.func.isRequired,
                'id': _pt_.number.isRequired
            }),
            'css': _pt_.shape({}),
            'dom': _pt_.arrayOf(_pt_.string),
            'callable': _pt_.func.isRequired,
            'newable': _pt_.func.isRequired,
            'typeOf': _pt_.func.isRequired,
            'id': _pt_.number.isRequired
        }),
        'css': _pt_.shape({}),
        'dom': _pt_.arrayOf(_pt_.string),
        'callable': _pt_.func.isRequired,
        'newable': _pt_.func.isRequired,
        'typeOf': _pt_.func.isRequired,
        'id': _pt_.number.isRequired
    }),
    'css': _pt_.shape({}),
    'dom': _pt_.arrayOf(_pt_.string),
    'callable': _pt_.func.isRequired,
    'newable': _pt_.func.isRequired,
    'typeOf': _pt_.func.isRequired,
    'id': _pt_.number.isRequired
};
const NonExportedStatelessFunctionalTestComponent = (p) => {
    return <AnyPropsComponent {...p}/>;
};
NonExportedStatelessFunctionalTestComponent.propTypes = {
    'numberProp': _pt_.number.isRequired,
    'stringLiteralProp': _pt_.oneOf([
        \\"hi\\"
    ]).isRequired,
    'numberLiteralProp': _pt_.oneOf([
        1
    ]).isRequired,
    'boolLiteralProp': _pt_.oneOf([
        false
    ]).isRequired,
    'boolProp': _pt_.bool.isRequired,
    'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
    'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
    'optionalProp': _pt_.bool,
    'commentedProp': _pt_.string.isRequired,
    'union': _pt_.oneOf([
        \\"a\\",
        \\"b\\",
        \\"c\\"
    ]).isRequired,
    'unionAlias': _pt_.oneOfType([
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.shape({
            'lastName': _pt_.string.isRequired
        })
    ]).isRequired,
    'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
        _pt_.oneOf([
            true
        ]),
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.oneOf([
            \\"a\\"
        ]),
        _pt_.oneOf([
            \\"b\\"
        ]),
        _pt_.oneOf([
            \\"c\\"
        ]),
        _pt_.oneOf([
            5
        ]),
        _pt_.oneOf([
            \\"6\\"
        ]),
        _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        })
    ])).isRequired,
    'complexUnion': _pt_.oneOfType([
        _pt_.oneOf([
            true
        ]),
        _pt_.shape({
            'firstName': _pt_.string.isRequired
        }),
        _pt_.oneOf([
            \\"a\\"
        ]),
        _pt_.oneOf([
            \\"b\\"
        ]),
        _pt_.oneOf([
            \\"c\\"
        ]),
        _pt_.oneOf([
            5
        ]),
        _pt_.oneOf([
            \\"6\\"
        ]),
        _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        })
    ]).isRequired,
    'interfaceValue': _pt_.shape({
        'firstName': _pt_.string.isRequired
    }).isRequired,
    'intersecton': _pt_.shape({
        'firstName': _pt_.string.isRequired,
        'lastName': _pt_.string.isRequired
    }).isRequired,
    'intersectonAlias': _pt_.shape({
        'firstName': _pt_.string.isRequired,
        'lastName': _pt_.string.isRequired
    }).isRequired,
    'partialIntersectionAlias': _pt_.shape({
        'firstName': _pt_.string,
        'lastName': _pt_.string
    }).isRequired,
    'enum': _pt_.oneOf([
        0,
        1,
        2
    ]).isRequired,
    'optionalSelfReferencing': _pt_.shape({
        'numberProp': _pt_.number.isRequired,
        'stringLiteralProp': _pt_.oneOf([
            \\"hi\\"
        ]).isRequired,
        'numberLiteralProp': _pt_.oneOf([
            1
        ]).isRequired,
        'boolLiteralProp': _pt_.oneOf([
            false
        ]).isRequired,
        'boolProp': _pt_.bool.isRequired,
        'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
        'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
        'optionalProp': _pt_.bool,
        'commentedProp': _pt_.string.isRequired,
        'union': _pt_.oneOf([
            \\"a\\",
            \\"b\\",
            \\"c\\"
        ]).isRequired,
        'unionAlias': _pt_.oneOfType([
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.shape({
                'lastName': _pt_.string.isRequired
            })
        ]).isRequired,
        'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
            _pt_.oneOf([
                true
            ]),
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.oneOf([
                \\"a\\"
            ]),
            _pt_.oneOf([
                \\"b\\"
            ]),
            _pt_.oneOf([
                \\"c\\"
            ]),
            _pt_.oneOf([
                5
            ]),
            _pt_.oneOf([
                \\"6\\"
            ]),
            _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            })
        ])).isRequired,
        'complexUnion': _pt_.oneOfType([
            _pt_.oneOf([
                true
            ]),
            _pt_.shape({
                'firstName': _pt_.string.isRequired
            }),
            _pt_.oneOf([
                \\"a\\"
            ]),
            _pt_.oneOf([
                \\"b\\"
            ]),
            _pt_.oneOf([
                \\"c\\"
            ]),
            _pt_.oneOf([
                5
            ]),
            _pt_.oneOf([
                \\"6\\"
            ]),
            _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            })
        ]).isRequired,
        'interfaceValue': _pt_.shape({
            'firstName': _pt_.string.isRequired
        }).isRequired,
        'intersecton': _pt_.shape({
            'firstName': _pt_.string.isRequired,
            'lastName': _pt_.string.isRequired
        }).isRequired,
        'intersectonAlias': _pt_.shape({
            'firstName': _pt_.string.isRequired,
            'lastName': _pt_.string.isRequired
        }).isRequired,
        'partialIntersectionAlias': _pt_.shape({
            'firstName': _pt_.string,
            'lastName': _pt_.string
        }).isRequired,
        'enum': _pt_.oneOf([
            0,
            1,
            2
        ]).isRequired,
        'optionalSelfReferencing': _pt_.shape({
            'numberProp': _pt_.number.isRequired,
            'stringLiteralProp': _pt_.oneOf([
                \\"hi\\"
            ]).isRequired,
            'numberLiteralProp': _pt_.oneOf([
                1
            ]).isRequired,
            'boolLiteralProp': _pt_.oneOf([
                false
            ]).isRequired,
            'boolProp': _pt_.bool.isRequired,
            'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
            'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
            'optionalProp': _pt_.bool,
            'commentedProp': _pt_.string.isRequired,
            'union': _pt_.oneOf([
                \\"a\\",
                \\"b\\",
                \\"c\\"
            ]).isRequired,
            'unionAlias': _pt_.oneOfType([
                _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }),
                _pt_.shape({
                    'lastName': _pt_.string.isRequired
                })
            ]).isRequired,
            'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
                _pt_.oneOf([
                    true
                ]),
                _pt_.shape({
                    'firstName': _pt_.any.isRequired
                }),
                _pt_.oneOf([
                    \\"a\\"
                ]),
                _pt_.oneOf([
                    \\"b\\"
                ]),
                _pt_.oneOf([
                    \\"c\\"
                ]),
                _pt_.oneOf([
                    5
                ]),
                _pt_.oneOf([
                    \\"6\\"
                ]),
                _pt_.shape({
                    'firstName': _pt_.any,
                    'lastName': _pt_.any
                })
            ])).isRequired,
            'complexUnion': _pt_.oneOfType([
                _pt_.oneOf([
                    true
                ]),
                _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }),
                _pt_.oneOf([
                    \\"a\\"
                ]),
                _pt_.oneOf([
                    \\"b\\"
                ]),
                _pt_.oneOf([
                    \\"c\\"
                ]),
                _pt_.oneOf([
                    5
                ]),
                _pt_.oneOf([
                    \\"6\\"
                ]),
                _pt_.shape({
                    'firstName': _pt_.string,
                    'lastName': _pt_.string
                })
            ]).isRequired,
            'interfaceValue': _pt_.shape({
                'firstName': _pt_.string.isRequired
            }).isRequired,
            'intersecton': _pt_.shape({
                'firstName': _pt_.string.isRequired,
                'lastName': _pt_.string.isRequired
            }).isRequired,
            'intersectonAlias': _pt_.shape({
                'firstName': _pt_.string.isRequired,
                'lastName': _pt_.string.isRequired
            }).isRequired,
            'partialIntersectionAlias': _pt_.shape({
                'firstName': _pt_.string,
                'lastName': _pt_.string
            }).isRequired,
            'enum': _pt_.oneOf([
                0,
                1,
                2
            ]).isRequired,
            'optionalSelfReferencing': _pt_.shape({
                'numberProp': _pt_.number.isRequired,
                'stringLiteralProp': _pt_.oneOf([
                    \\"hi\\"
                ]).isRequired,
                'numberLiteralProp': _pt_.oneOf([
                    1
                ]).isRequired,
                'boolLiteralProp': _pt_.oneOf([
                    false
                ]).isRequired,
                'boolProp': _pt_.bool.isRequired,
                'arrayProp': _pt_.arrayOf(_pt_.number).isRequired,
                'genericArrayProp': _pt_.arrayOf(_pt_.number).isRequired,
                'optionalProp': _pt_.bool,
                'commentedProp': _pt_.string.isRequired,
                'union': _pt_.oneOf([
                    \\"a\\",
                    \\"b\\",
                    \\"c\\"
                ]).isRequired,
                'unionAlias': _pt_.oneOfType([
                    _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }),
                    _pt_.shape({
                        'lastName': _pt_.any.isRequired
                    })
                ]).isRequired,
                'arrayOfUnion': _pt_.arrayOf(_pt_.oneOfType([
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any,
                    _pt_.any
                ])).isRequired,
                'complexUnion': _pt_.oneOfType([
                    _pt_.oneOf([
                        true
                    ]),
                    _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }),
                    _pt_.oneOf([
                        \\"a\\"
                    ]),
                    _pt_.oneOf([
                        \\"b\\"
                    ]),
                    _pt_.oneOf([
                        \\"c\\"
                    ]),
                    _pt_.oneOf([
                        5
                    ]),
                    _pt_.oneOf([
                        \\"6\\"
                    ]),
                    _pt_.shape({
                        'firstName': _pt_.any,
                        'lastName': _pt_.any
                    })
                ]).isRequired,
                'interfaceValue': _pt_.shape({
                    'firstName': _pt_.string.isRequired
                }).isRequired,
                'intersecton': _pt_.shape({
                    'firstName': _pt_.string.isRequired,
                    'lastName': _pt_.string.isRequired
                }).isRequired,
                'intersectonAlias': _pt_.shape({
                    'firstName': _pt_.string.isRequired,
                    'lastName': _pt_.string.isRequired
                }).isRequired,
                'partialIntersectionAlias': _pt_.shape({
                    'firstName': _pt_.string,
                    'lastName': _pt_.string
                }).isRequired,
                'enum': _pt_.oneOf([
                    0,
                    1,
                    2
                ]).isRequired,
                'optionalSelfReferencing': _pt_.shape({
                    'numberProp': _pt_.number.isRequired,
                    'stringLiteralProp': _pt_.oneOf([
                        \\"hi\\"
                    ]).isRequired,
                    'numberLiteralProp': _pt_.oneOf([
                        1
                    ]).isRequired,
                    'boolLiteralProp': _pt_.oneOf([
                        false
                    ]).isRequired,
                    'boolProp': _pt_.bool.isRequired,
                    'arrayProp': _pt_.arrayOf(_pt_.any).isRequired,
                    'genericArrayProp': _pt_.arrayOf(_pt_.any).isRequired,
                    'optionalProp': _pt_.bool,
                    'commentedProp': _pt_.string.isRequired,
                    'union': _pt_.oneOf([
                        \\"a\\",
                        \\"b\\",
                        \\"c\\"
                    ]).isRequired,
                    'unionAlias': _pt_.oneOfType([
                        _pt_.any,
                        _pt_.any
                    ]).isRequired,
                    'arrayOfUnion': _pt_.arrayOf(_pt_.any).isRequired,
                    'complexUnion': _pt_.oneOfType([
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any,
                        _pt_.any
                    ]).isRequired,
                    'interfaceValue': _pt_.shape({
                        'firstName': _pt_.any.isRequired
                    }).isRequired,
                    'intersecton': _pt_.shape({
                        'firstName': _pt_.any.isRequired,
                        'lastName': _pt_.any.isRequired
                    }).isRequired,
                    'intersectonAlias': _pt_.shape({
                        'firstName': _pt_.any.isRequired,
                        'lastName': _pt_.any.isRequired
                    }).isRequired,
                    'partialIntersectionAlias': _pt_.shape({
                        'firstName': _pt_.any,
                        'lastName': _pt_.any
                    }).isRequired,
                    'enum': _pt_.oneOf([
                        0,
                        1,
                        2
                    ]).isRequired,
                    'optionalSelfReferencing': _pt_.shape({
                        'numberProp': _pt_.any.isRequired,
                        'stringLiteralProp': _pt_.any.isRequired,
                        'numberLiteralProp': _pt_.any.isRequired,
                        'boolLiteralProp': _pt_.any.isRequired,
                        'boolProp': _pt_.any.isRequired,
                        'arrayProp': _pt_.any.isRequired,
                        'genericArrayProp': _pt_.any.isRequired,
                        'optionalProp': _pt_.any,
                        'commentedProp': _pt_.any.isRequired,
                        'union': _pt_.any.isRequired,
                        'unionAlias': _pt_.any.isRequired,
                        'arrayOfUnion': _pt_.any.isRequired,
                        'complexUnion': _pt_.any.isRequired,
                        'interfaceValue': _pt_.any.isRequired,
                        'intersecton': _pt_.any.isRequired,
                        'intersectonAlias': _pt_.any.isRequired,
                        'partialIntersectionAlias': _pt_.any.isRequired,
                        'enum': _pt_.any.isRequired,
                        'optionalSelfReferencing': _pt_.any,
                        'css': _pt_.any,
                        'dom': _pt_.any,
                        'callable': _pt_.any.isRequired,
                        'newable': _pt_.any.isRequired,
                        'typeOf': _pt_.any.isRequired,
                        'id': _pt_.any.isRequired
                    }),
                    'css': _pt_.shape({}),
                    'dom': _pt_.arrayOf(_pt_.any),
                    'callable': _pt_.func.isRequired,
                    'newable': _pt_.func.isRequired,
                    'typeOf': _pt_.func.isRequired,
                    'id': _pt_.number.isRequired
                }),
                'css': _pt_.shape({}),
                'dom': _pt_.arrayOf(_pt_.string),
                'callable': _pt_.func.isRequired,
                'newable': _pt_.func.isRequired,
                'typeOf': _pt_.func.isRequired,
                'id': _pt_.number.isRequired
            }),
            'css': _pt_.shape({}),
            'dom': _pt_.arrayOf(_pt_.string),
            'callable': _pt_.func.isRequired,
            'newable': _pt_.func.isRequired,
            'typeOf': _pt_.func.isRequired,
            'id': _pt_.number.isRequired
        }),
        'css': _pt_.shape({}),
        'dom': _pt_.arrayOf(_pt_.string),
        'callable': _pt_.func.isRequired,
        'newable': _pt_.func.isRequired,
        'typeOf': _pt_.func.isRequired,
        'id': _pt_.number.isRequired
    }),
    'css': _pt_.shape({}),
    'dom': _pt_.arrayOf(_pt_.string),
    'callable': _pt_.func.isRequired,
    'newable': _pt_.func.isRequired,
    'typeOf': _pt_.func.isRequired,
    'id': _pt_.number.isRequired
};
export const InferrableStatelessFunctionalTestComponent = (p) => {
    return <StatelessFunctionalTestComponent {...p}/>;
};
export function DeclaredFunctionTestComponent(p) {
    return <StatelessFunctionalTestComponent {...p}/>;
}
"
`;
